{"version":3,"sources":["components/3_sub_conteiners/AllProjectsComponent.js","components/2_conteiners/AllProjects.js","pages/Projects.js","components/6_common_help_comp/ShowBox.js"],"names":["moment","require","AllProjectsComponent","memo","dates","client","payments","userInfo","newProjects","sizeArray","openClientTableClass","openCurrentProject","clouseCurrentProject","windowWidth","setAlertClass","setAlertText","setFunct","setModalText","setModalClass","setId","modalClass","addPayment","openPayment","openNewPayment","clouseNewPayment","clousePayment","console","log","owner","fire","auth","currentUser","uid","ownerDates","find","date","dateStart","dateFinish","summArray","numb","i","summ","size","TransitionGroup","component","className","map","project","projectDataArray","ProjectDataArray","currentProjectPayments","filter","pay","paymentOwner","id","projectReadinessDateClass","Date","projectReadinessDate","format","signaturуOfActClass","signaturуOfAct","poketExistenceClass","poketExistence","contractExistenceClass","contractExistence","CSSTransition","key","classNames","timeout","openProject","onClick","align","width","length","company","jointCompany","type","CreateProject","PaymentComponent","AllProjects","clientType","userInfos","clients","projects","removeProject","useState","alertClass","alertText","setClass","fun","textModal","Id","info","userInUse","infoUse","sort","a","b","registrationDate","SizeNameArray","fullName","name","ModalBox","modalText","modalFunction","innerFunction","ShowBox","AlertBox","Projects","email","split","useContext","FirebaseContext","loading","fetchClients","fetchDates","fetchUsersInfo","fetchProjects","fetchPayments","useEffect","Loader"],"mappings":"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","file":"static/js/14.acce2d25.chunk.js","sourcesContent":["import React, { memo } from \"react\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport { PaymentComponent } from \"../4_render_components/PaymentComponent\";\r\nimport { CreateProject } from \"../../components/5_create_components/CreateProject\";\r\nimport { ProjectDataArray } from \"../../helpComponents/dataFunctions\";\r\nimport fire from \"../../config/Fire\";\r\nvar moment = require(\"moment\");\r\n\r\nexport const AllProjectsComponent = memo(\r\n  ({\r\n    dates,\r\n    client,\r\n    payments,\r\n    userInfo,\r\n    newProjects,\r\n    sizeArray,\r\n    openClientTableClass,\r\n   \r\n    openCurrentProject,\r\n    clouseCurrentProject,\r\n\r\n    windowWidth,\r\n    setAlertClass,\r\n    setAlertText,\r\n    setFunct,\r\n    setModalText,\r\n    setModalClass,\r\n    setId,\r\n    modalClass,\r\n\r\n    addPayment,\r\n    openPayment,\r\n    openNewPayment,\r\n    clouseNewPayment,\r\n    clousePayment,\r\n  }) => {\r\n    console.log(client);\r\n    let dataListWarningText =\r\n      \"Видалення проекту! Для видалення клієнту необхідно видалити всі проекти!!!\";\r\n    let owner = fire.auth.currentUser.uid;\r\n    let ownerDates = dates.find((date) => date.owner === owner);\r\n    if (!ownerDates) {\r\n      ownerDates = {\r\n        dateStart: \"1970-01-01T00:00\",\r\n        dateFinish: \"2070-01-01T00:00\",\r\n      };\r\n    }\r\n    const summArray = (numb, sizeArray) => {\r\n      let i = 0;\r\n      let summ = 0;\r\n      while (i < numb) {\r\n        summ = summ + sizeArray[i].size;\r\n        i++;\r\n      }\r\n      return summ;\r\n    };\r\n    //-----------------------RENDER----------------->\r\n    return (\r\n      <form>\r\n        <TransitionGroup component=\"ul\" className=\"project-group\">\r\n          {newProjects.map((project) => {\r\n            // let newRoutes = routes.filter(\r\n            //   (route) => route.routeOwner === project.id\r\n            // );\r\n            //--PROJECTS DATA ARRAY-------------------------->\r\n            const projectDataArray = ProjectDataArray(project);\r\n            let currentProjectPayments = payments.filter(\r\n              (pay) => pay.paymentOwner === project.id\r\n            );\r\n            //newRoutes.sort((a, b) => a.routNumber - b.routNumber);\r\n            //--DYNAMIC CLASSES ----------------------------->\r\n            let projectReadinessDateClass =\r\n              moment(new Date(project.projectReadinessDate)).format(\r\n                \"YYYY-MM-DD\"\r\n              ) >= moment(new Date()).format(\"YYYY-MM-DD\")\r\n                ? \"goodTime\"\r\n                : \"badTime\";\r\n            let signaturуOfActClass =\r\n              project.signaturуOfAct === \"Так\" ? \"good\" : \"bad\";\r\n            let poketExistenceClass =\r\n              project.poketExistence === \"Так\" ? \"good\" : \"bad\";\r\n            let contractExistenceClass =\r\n              project.contractExistence === \"Так\" ? \"good\" : \"bad\";\r\n            return (\r\n              <CSSTransition key={project.id} classNames={\"note\"} timeout={800}>\r\n                <li\r\n                  key={project.id}\r\n                  className=\"project-group-item projectInnerLi\"\r\n                >\r\n                  {!project.openProject && (\r\n                    <div key={project.id} className=\"projectBasis\">\r\n                      <div className=\"d-flex justify-content-between\">\r\n                        <table\r\n                          className=\"projectTable\"\r\n                          onClick={() => openCurrentProject(project)}\r\n                        >\r\n                          <tbody>\r\n                            <tr align=\"center\">\r\n                              {windowWidth > 75 + summArray(1, sizeArray) && (\r\n                                <td width={sizeArray[0].size} className=\"head\">\r\n                                  <small className=\"projectName\">\r\n                                    {projectDataArray[0]}\r\n                                  </small>\r\n                                </td>\r\n                              )}\r\n                              {windowWidth > 75 + summArray(2, sizeArray) && (\r\n                                <td\r\n                                  width={sizeArray[1].size}\r\n                                  className={`head ${projectReadinessDateClass}`}\r\n                                >\r\n                                  <small className=\"smallProjectDateBold\">{`${moment(\r\n                                    projectDataArray[1]\r\n                                  ).format(\"DD.MM.YY\")}`}</small>\r\n                                </td>\r\n                              )}\r\n                              {windowWidth > 75 + summArray(3, sizeArray) && (\r\n                                <td width={sizeArray[2].size}>\r\n                                  <small className={contractExistenceClass}>\r\n                                    {projectDataArray[2]}\r\n                                  </small>\r\n                                </td>\r\n                              )}\r\n                              {windowWidth > 75 + summArray(4, sizeArray) && (\r\n                                <td width={sizeArray[3].size}>\r\n                                  <small className={signaturуOfActClass}>\r\n                                    {projectDataArray[3]}\r\n                                  </small>\r\n                                </td>\r\n                              )}\r\n                              {windowWidth > 75 + summArray(5, sizeArray) && (\r\n                                <td width={sizeArray[4].size}>\r\n                                  <small className={poketExistenceClass}>\r\n                                    {projectDataArray[4]}\r\n                                  </small>\r\n                                </td>\r\n                              )}\r\n                              {windowWidth > 75 + summArray(6, sizeArray) && (\r\n                                <td width={sizeArray[5].size}>\r\n                                  <small>{projectDataArray[5]}</small>\r\n                                </td>\r\n                              )}\r\n                              {windowWidth > 75 + summArray(7, sizeArray) && (\r\n                                <td width={sizeArray[6].size}>\r\n                                  <small>{projectDataArray[6]}</small>\r\n                                </td>\r\n                              )}\r\n                              {windowWidth > 75 + summArray(8, sizeArray) && (\r\n                                <td width={sizeArray[7].size}>\r\n                                  <small>{projectDataArray[7]}</small>\r\n                                </td>\r\n                              )}\r\n                              {windowWidth > 75 + summArray(9, sizeArray) && (\r\n                                <td width={sizeArray[8].size} className=\"head\">\r\n                                  <small>{`${moment(projectDataArray[8]).format(\r\n                                    \"DD.MM.YY\"\r\n                                  )}`}</small>\r\n                                </td>\r\n                              )}\r\n                              {windowWidth > 75 + summArray(10, sizeArray) && (\r\n                                <td width={sizeArray[9].size}>\r\n                                  <small>{projectDataArray[9]}</small>\r\n                                </td>\r\n                              )}\r\n                              {windowWidth > 75 + summArray(11, sizeArray) && (\r\n                                <td width={sizeArray[10].size}>\r\n                                  <small>{projectDataArray[10]}</small>\r\n                                </td>\r\n                              )}\r\n                              {windowWidth > 75 + summArray(12, sizeArray) && (\r\n                                <td width={sizeArray[11].size}>\r\n                                  <small>{projectDataArray[11]}</small>\r\n                                </td>\r\n                              )}\r\n                              {windowWidth > 75 + summArray(13, sizeArray) && (\r\n                                <td width={sizeArray[12].size}>\r\n                                  <small>{projectDataArray[12]}</small>\r\n                                </td>\r\n                              )}\r\n                              {windowWidth > 75 + summArray(14, sizeArray) && (\r\n                                <td width={sizeArray[13].size}>\r\n                                  <small>{projectDataArray[13]}</small>\r\n                                </td>\r\n                              )}\r\n                            </tr>\r\n                          </tbody>\r\n                        </table>\r\n                        {!project.openProject &\r\n                          !currentProjectPayments.length &\r\n                          (userInfo.company === userInfo.jointCompany) && (\r\n                          <button\r\n                            id=\"deleteProjectBtn\"\r\n                            type=\"button\"\r\n                            className=\"btn btn-outline-danger btn-sm deleteProjectBtn\"\r\n                            onClick={() => {\r\n                              setId(project.id);\r\n                              setFunct(\"removeList\");\r\n                              setModalText(dataListWarningText);\r\n                              setModalClass();\r\n                            }}\r\n                          >\r\n                            Х\r\n                          </button>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                  <div>\r\n                    <div\r\n                      className=\"clouseProjectBasis\"\r\n                      onClick={() => clouseCurrentProject(project)}\r\n                    >\r\n                      {project.openProject && (\r\n                        <table className=\"clouseProjectForm\">\r\n                          <tbody>\r\n                            <tr className=\"clouseProjectTableButton\">\r\n                              <td>Закрити форму проекта</td>\r\n                            </tr>\r\n                          </tbody>\r\n                        </table>\r\n                      )}\r\n                    </div>\r\n                    {project.openProject && (\r\n                      <CreateProject\r\n                        className={openClientTableClass}\r\n                        client={client}\r\n                        project={project}\r\n                        setAlertText={setAlertText}\r\n                        setAlertClass={setAlertClass}\r\n                        newProjects={newProjects}\r\n                        userInfo={userInfo}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                  <PaymentComponent\r\n                    project={project}\r\n                    setId={setId}\r\n                    currentProjectPayments={currentProjectPayments}\r\n                    openPayment={openPayment}\r\n                    clousePayment={clousePayment}\r\n                    openNewPayment={openNewPayment}\r\n                    clouseNewPayment={clouseNewPayment}\r\n                    addPayment={addPayment}\r\n                    setFunct={setFunct}\r\n                    setModalClass={setModalClass}\r\n                    setModalText={setModalText}\r\n                    windowWidth={windowWidth}\r\n                    setAlertText={setAlertText}\r\n                    setAlertClass={setAlertClass}\r\n                    modalClass={modalClass}\r\n                    userInfo={userInfo}\r\n                  />\r\n                </li>\r\n              </CSSTransition>\r\n            );\r\n          })}\r\n        </TransitionGroup>\r\n      </form>\r\n    );\r\n  }\r\n);\r\n","import React, { memo, useState } from \"react\";\r\nimport { ModalBox } from \"../6_common_help_comp/ModalBox\";\r\nimport { AlertBox } from \"../6_common_help_comp/AlertBox\";\r\nimport { ShowBox } from \"../6_common_help_comp/ShowBox\";\r\nimport fire from \"../../config/Fire\";\r\nimport { AllProjectsComponent } from \"../3_sub_conteiners/AllProjectsComponent\";\r\nimport {SizeNameArray} from \"../../helpComponents/dataFunctions\";\r\n\r\nexport const AllProjects = memo(\r\n  ({\r\n    //---COMMON DATES ----------------------->\r\n    windowWidth,\r\n    clientType,\r\n    //---COMMON STATE ----------------------->\r\n    dates,\r\n    client,\r\n    userInfos,\r\n    clients,\r\n    projects,\r\n    payments,\r\n    //---PROJECTS FUNCTIONS ----------------->\r\n    removeProject,\r\n    openCurrentProject,\r\n    clouseCurrentProject,\r\n\r\n    addPayment,\r\n    openPayment,\r\n    openNewPayment,\r\n    clouseNewPayment,\r\n    clousePayment,\r\n  }) => {\r\n    //---Alert functions block---------------->\r\n    let [alertClass, setAlertClass] = useState(\"modal\");\r\n    let [alertText, setAlertText] = useState(\"\");\r\n    let [modalClass, setClass] = useState(\"modal\");\r\n    let [fun, setFunct] = useState(\"\");\r\n    let [textModal, setModalText] = useState();\r\n    let [Id, setId] = useState();\r\n    let setModalClass = () => {\r\n      if ((modalClass = \"modal\")) {\r\n        setClass(\"open\");\r\n      } else {\r\n        setClass(\"modal\");\r\n      }\r\n    };\r\n    //--Create user data----------------------->\r\n    var owner = fire.auth.currentUser.uid;\r\n    let userInfo = userInfos.find((info) => info.owner === owner);\r\n    if (!userInfo) {\r\n      return null;\r\n    }\r\n    let userInUse = userInfos.find(\r\n      (infoUse) => infoUse.company === userInfo.jointCompany\r\n    );\r\n    if (!userInUse) {\r\n      return null;\r\n    }\r\n    //--Create clients data array--------------->\r\n    clients = clients.filter((client) => client.owner === userInUse.owner);\r\n    clients = clients.filter((client) => client.clientType === clientType);\r\n    clients.sort(\r\n      (a, b) => new Date(b.registrationDate) - new Date(a.registrationDate)\r\n    );\r\n    let clientsExists = clients.length;\r\n    if (clientsExists === 0) {\r\n      return null;\r\n    }\r\n    //--TABLE FUNCTION-------------------------->\r\n    let sizeArray = SizeNameArray(windowWidth);\r\n    const summArray = (numb, sizeArray) => {\r\n      let i = 0;\r\n      let summ = 0;\r\n      while (i < numb) {\r\n        summ = summ + sizeArray[i].size;\r\n        i++;\r\n      }\r\n      return summ;\r\n    };\r\n    //--------------------Create projects----------------------->\r\n    projects.sort(\r\n      (a, b) => new Date(a.projectReadinessDate) - new Date(b.projectReadinessDate)\r\n    );\r\n    //-------------------Progects render block------------------>\r\n    return (\r\n      <div>\r\n        <li className=\"list-group-item clientInnerLi\">\r\n          <div>\r\n            <div className=\"d-flex justify-content-between\">\r\n              <table className=\"headTable\">\r\n                <tbody>\r\n                  <tr align=\"center\">\r\n                    {windowWidth > 75 + summArray(1, sizeArray) && (\r\n                      <td width={sizeArray[0].size}\r\n                        onClick={() => {\r\n                          setFunct(\"showFunction\");\r\n                          setModalText(sizeArray[0].fullName);\r\n                          setModalClass();\r\n                        }}\r\n                      >\r\n                        <small>{sizeArray[0].name}</small>\r\n                      </td>\r\n                    )}\r\n                    {windowWidth > 75 + summArray(2, sizeArray) && (\r\n                      <td width={sizeArray[1].size}\r\n                        onClick={() => {\r\n                          setFunct(\"showFunction\");\r\n                          setModalText(sizeArray[1].fullName);\r\n                          setModalClass();\r\n                        }}\r\n                      >\r\n                        <small>{sizeArray[1].name}</small>\r\n                      </td>\r\n                    )}\r\n                    {windowWidth > 75 + summArray(3, sizeArray) && (\r\n                      <td width={sizeArray[2].size}\r\n                        onClick={() => {\r\n                          setFunct(\"showFunction\");\r\n                          setModalText(sizeArray[2].fullName);\r\n                          setModalClass();\r\n                        }}\r\n                      >\r\n                        <small>{sizeArray[2].name}</small>\r\n                      </td>\r\n                    )}\r\n                    {windowWidth > 75 + summArray(4, sizeArray) && (\r\n                      <td\r\n                        width={sizeArray[3].size}\r\n                        onClick={() => {\r\n                          setFunct(\"showFunction\");\r\n                          setModalText(sizeArray[3].fullName);\r\n                          setModalClass();\r\n                        }}\r\n                      >\r\n                        <small>{sizeArray[3].name}</small>\r\n                      </td>\r\n                    )}\r\n                    {windowWidth > 75 + summArray(5, sizeArray) && (\r\n                      <td\r\n                        width={sizeArray[4].size}\r\n                        onClick={() => {\r\n                          setFunct(\"showFunction\");\r\n                          setModalText(sizeArray[4].fullName);\r\n                          setModalClass();\r\n                        }}\r\n                      >\r\n                        <small>{sizeArray[4].name}</small>\r\n                      </td>\r\n                    )}\r\n                    {windowWidth > 75 + summArray(6, sizeArray) && (\r\n                      <td width={sizeArray[5].size}\r\n                        onClick={() => {\r\n                          setFunct(\"showFunction\");\r\n                          setModalText(sizeArray[5].fullName);\r\n                          setModalClass();\r\n                        }}\r\n                      >\r\n                        <small>{sizeArray[5].name}</small>\r\n                      </td>\r\n                    )}\r\n                    {windowWidth > 75 + summArray(7, sizeArray) && (\r\n                      <td width={sizeArray[6].size}\r\n                        onClick={() => {\r\n                          setFunct(\"showFunction\");\r\n                          setModalText(sizeArray[6].fullName);\r\n                          setModalClass();\r\n                        }}\r\n                      >\r\n                        <small>{sizeArray[6].name}</small>\r\n                      </td>\r\n                    )}\r\n                    {windowWidth > 75 + summArray(8, sizeArray) && (\r\n                      <td width={sizeArray[7].size}\r\n                        onClick={() => {\r\n                          setFunct(\"showFunction\");\r\n                          setModalText(sizeArray[7].fullName);\r\n                          setModalClass();\r\n                        }}\r\n                      >\r\n                        <small>{sizeArray[7].name}</small>\r\n                      </td>\r\n                    )}\r\n                    {windowWidth > 75 + summArray(9, sizeArray) && (\r\n                      <td width={sizeArray[8].size}\r\n                        onClick={() => {\r\n                          setFunct(\"showFunction\");\r\n                          setModalText(sizeArray[8].fullName);\r\n                          setModalClass();\r\n                        }}>\r\n                        <small>{sizeArray[8].name}</small>\r\n                      </td>\r\n                    )}\r\n                    {windowWidth > 75 + summArray(10, sizeArray) && (\r\n                      <td width={sizeArray[9].size}\r\n                        onClick={() => {\r\n                          setFunct(\"showFunction\");\r\n                          setModalText(sizeArray[9].fullName);\r\n                          setModalClass();\r\n                        }}\r\n                      >\r\n                        <small>{sizeArray[9].name}</small>\r\n                      </td>\r\n                    )}\r\n                    {windowWidth > 75 + summArray(11, sizeArray) && (\r\n                      <td width={sizeArray[10].size}\r\n                        onClick={() => {\r\n                          setFunct(\"showFunction\");\r\n                          setModalText(sizeArray[10].fullName);\r\n                          setModalClass();\r\n                        }}\r\n                      >\r\n                        <small>{sizeArray[10].name}</small>\r\n                      </td>\r\n                    )}\r\n                    {windowWidth > 75 + summArray(12, sizeArray) && (\r\n                      <td width={sizeArray[11].size}\r\n                        onClick={() => {\r\n                          setFunct(\"showFunction\");\r\n                          setModalText(sizeArray[11].fullName);\r\n                          setModalClass();\r\n                        }}\r\n                      >\r\n                        <small>{sizeArray[11].name}</small>\r\n                      </td>\r\n                    )}\r\n                    {windowWidth > 75 + summArray(13, sizeArray) && (\r\n                      <td width={sizeArray[12].size}\r\n                        onClick={() => {\r\n                          setFunct(\"showFunction\");\r\n                          setModalText(sizeArray[12].fullName);\r\n                          setModalClass();\r\n                        }}\r\n                      >\r\n                        <small>{sizeArray[12].name}</small>\r\n                      </td>\r\n                    )}\r\n                    {windowWidth > 75 + summArray(14, sizeArray) && (\r\n                      <td width={sizeArray[13].size}\r\n                        onClick={() => {\r\n                          setFunct(\"showFunction\");\r\n                          setModalText(sizeArray[13].fullName);\r\n                          setModalClass();\r\n                        }}\r\n                      >\r\n                        <small>{sizeArray[13].name}</small>\r\n                      </td>\r\n                    )}\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <AllProjectsComponent\r\n              dates={dates}\r\n              payments={payments}\r\n              client={client}\r\n              newProjects={projects}\r\n              removeProject={removeProject}\r\n              openCurrentProject={openCurrentProject}\r\n              clouseCurrentProject={clouseCurrentProject}\r\n              addPayment={addPayment}\r\n              openPayment={openPayment}\r\n              clousePayment={clousePayment}\r\n              openNewPayment={openNewPayment}\r\n              clouseNewPayment={clouseNewPayment} \r\n              windowWidth={windowWidth}\r\n              setAlertClass={setAlertClass}\r\n              setAlertText={setAlertText}\r\n              setFunct={setFunct}\r\n              setModalText={setModalText}\r\n              setModalClass={setModalClass}\r\n              setId={setId}\r\n              modalClass={modalClass}\r\n              sizeArray={sizeArray}\r\n              userInfo={userInfo}\r\n            />\r\n            {fun === \"removeList\" && (\r\n              <ModalBox\r\n                modalClass={modalClass}\r\n                modalText={textModal}\r\n                modalFunction={setClass}\r\n                Id={Id}\r\n                innerFunction={removeProject}\r\n              />\r\n            )}\r\n            {fun === \"showFunction\" && (\r\n              <ShowBox\r\n                modalClass={modalClass}\r\n                modalText={textModal}\r\n                modalFunction={setClass}\r\n              />\r\n            )}\r\n            <AlertBox\r\n              modalClass={alertClass}\r\n              modalText={alertText}\r\n              modalFunction={setAlertClass}\r\n            />\r\n          </div>\r\n          <div className=\"d-flex justify-content-between\">\r\n            {/* <ExportReactCSV\r\n            csvData={carExelInfo(clients)}\r\n            fileName={\"авто\"}\r\n            textCSV=\"авто.xlx\"\r\n          /> */}\r\n            {/* <ExportReactCSV\r\n            csvData={carLiquidsExelInfo(clients, lists, routes)}\r\n            fileName={\"пммАвто\"}\r\n            textCSV=\"пмм.xlx\"\r\n          /> */}\r\n            {/* <ExportReactCSV\r\n            csvData={carListLiquidsExelInfo(clients, lists, routes)}\r\n            fileName={\"пммЛист\"}\r\n            textCSV=\"листи.xlx\"\r\n          />    */}\r\n          </div>\r\n        </li>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n","import React, { useContext, useEffect, memo } from \"react\";\r\nimport { AllProjects } from \"../components/2_conteiners/AllProjects\";\r\nimport { FirebaseContext } from \"../context/fiebase/firebaseContext\";\r\nimport { Loader } from \"../components/6_common_help_comp/Loader\";\r\nimport fire from \"../config/Fire\";\r\n\r\nconst Projects = memo(({ windowWidth }) => {\r\n  const clientType = \"Юрідичний\";\r\n  let email = fire.auth.currentUser.email;\r\n  email = email.split(\"@\")[0];\r\n  const {\r\n    clients,\r\n    projects,\r\n    payments,\r\n    dates,\r\n    userInfos,\r\n\r\n    loading,\r\n    fetchClients,\r\n    fetchDates,\r\n    fetchUsersInfo,\r\n\r\n    openCurrentProject,\r\n    clouseCurrentProject,\r\n    removeProject,\r\n    fetchProjects,\r\n\r\n    addPayment,\r\n    openPayment,\r\n    openNewPayment,\r\n    clouseNewPayment,\r\n    clousePayment,\r\n    fetchPayments,\r\n  } = useContext(FirebaseContext);\r\n  useEffect(() => {\r\n    fetchClients();\r\n    fetchDates();\r\n    fetchUsersInfo();\r\n    fetchPayments();\r\n    fetchProjects();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <small>{email}</small>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <AllProjects\r\n        dates={dates} \r\n        clients={clients}\r\n        projects={projects}\r\n        payments={ payments}\r\n        userInfos={userInfos}\r\n        removeProject={removeProject}\r\n        clientType={clientType}\r\n        windowWidth={windowWidth}\r\n        openCurrentProject={openCurrentProject}\r\n        clouseCurrentProject={clouseCurrentProject}\r\n        fetchPayments={fetchPayments}\r\n        addPayment={addPayment}\r\n        openPayment={openPayment}\r\n        clousePayment={clousePayment}\r\n        openNewPayment={openNewPayment}\r\n        clouseNewPayment={clouseNewPayment}\r\n      />\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Projects;\r\n","import React from \"react\";\r\n\r\nexport const ShowBox = ({ modalClass, modalText, modalFunction }) => {\r\n  let setClass = () => {\r\n    modalFunction(\"modal\");\r\n  };\r\n  return (\r\n    <div id={modalClass}>\r\n      <div className=\"showWindow\">\r\n        <div className={modalClass}>\r\n          <div className=\"top-show-content\">\r\n            <button\r\n              id=\"deleteShowModal\"\r\n              type=\"button\"\r\n              className=\"btn btn-outline-secondary btn-sm\"\r\n              onClick={() => setClass()}\r\n            >\r\n              &times;\r\n            </button>\r\n            <p>{modalText}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"sourceRoot":""}