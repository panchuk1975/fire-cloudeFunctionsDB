{"version":3,"sources":["components/Register.js"],"names":["contentWidth","Math","pow","window","innerWidth","Register","props","handleChange","event","persist","setState","target","name","value","register","preventDefault","fire","auth","createUserWithEmailAndPassword","state","email","password","then","user","currentUser","console","log","sendEmailVerification","catch","error","message","updateDimensions","width","height","innerHeight","confirmPassword","fireErrors","formTitle","loginBtn","addEventListener","this","removeEventListener","errorNotification","className","style","backgroundColor","action","onSubmit","type","placeholder","onChange","required","onClick","pass_field","document","querySelector","show_btn","color","textContent","conf_pass_field","conf_show_btn","to","Component","React","memo"],"mappings":"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","file":"static/js/17.b4131cea.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport fire from \"../config/Fire\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nlet contentWidth = \"25%\";\r\ncontentWidth = `${\r\n  7.2096691 * Math.pow(10, -14) * Math.pow(window.innerWidth, 5) -\r\n  3.8875191 * Math.pow(10, -10) * Math.pow(window.innerWidth, 4) +\r\n  7.5708477 * Math.pow(10, -7) * Math.pow(window.innerWidth, 3) -\r\n  6.0702864 * Math.pow(10, -4) * Math.pow(window.innerWidth, 2) +\r\n  0.1046586 * window.innerWidth +\r\n  106.6952733\r\n}%`;\r\n\r\nexport class Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      fireErrors: \"\",\r\n      formTitle: \"\",\r\n      loginBtn: true,\r\n      width: 0,\r\n      height: 0,\r\n    };\r\n  }\r\n  handleChange = (event) => {\r\n    event.persist();\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n  register = (event) => {\r\n    event.preventDefault();\r\n    fire.auth\r\n      .createUserWithEmailAndPassword(this.state.email, this.state.password)\r\n      .then(function () {\r\n        let user = fire.auth.currentUser;\r\n        console.log(user);\r\n        user.sendEmailVerification();\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error.message, 7000);\r\n      });\r\n    console.log(`Validation link was sent to email.`);\r\n  };\r\n  updateDimensions = () => {\r\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n  };\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.updateDimensions);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.updateDimensions);\r\n  }\r\n  render() {\r\n    let showPassword = () => {\r\n      const pass_field = document.querySelector(\".password\");\r\n      const show_btn = document.querySelector(\".show\");\r\n      if (pass_field.type === \"password\") {\r\n        pass_field.type = \"text\";\r\n        show_btn.style.color = \"#3498db\";\r\n        show_btn.textContent = \"HIDE\";\r\n      } else {\r\n        pass_field.type = \"password\";\r\n        show_btn.style.color = \"#222\";\r\n        show_btn.textContent = \"SHOW\";\r\n      }\r\n    };\r\n    let showConfirmPassword = () => {\r\n      const conf_pass_field = document.querySelector(\".confirmPassword\");\r\n      const conf_show_btn = document.querySelector(\".confirmShow\");\r\n      if (conf_pass_field.type === \"password\") {\r\n        conf_pass_field.type = \"text\";\r\n        conf_show_btn.style.color = \"#3498db\";\r\n        conf_show_btn.textContent = \"HIDE\";\r\n      } else {\r\n        conf_pass_field.type = \"password\";\r\n        conf_show_btn.style.color = \"#222\";\r\n        conf_show_btn.textContent = \"SHOW\";\r\n      }\r\n    };\r\n    contentWidth = `${\r\n      7.2096691 * Math.pow(10, -14) * Math.pow(window.innerWidth, 5) -\r\n      3.8875191 * Math.pow(10, -10) * Math.pow(window.innerWidth, 4) +\r\n      7.5708477 * Math.pow(10, -7) * Math.pow(window.innerWidth, 3) -\r\n      6.0702864 * Math.pow(10, -4) * Math.pow(window.innerWidth, 2) +\r\n      0.1046586 * window.innerWidth +\r\n      106.6952733\r\n    }%`;\r\n    let errorNotification = this.state.fireErrors ? (\r\n      <div className=\"Error\" style={{ backgroundColor: \"red\" }}>\r\n        {this.state.formTitle ||\r\n          \"Warning! Authorization Error! Check the data!\"}\r\n      </div>\r\n    ) : null;\r\n    return (\r\n      <div className=\"bg-img\">\r\n        <div className=\"content\" style={{ width: contentWidth }}>\r\n          <header>FORASLEND DB</header>\r\n          <form action=\"#\" onSubmit={this.register}>\r\n            <div className=\"field\">\r\n              <span className=\"fa fa-user\"></span>\r\n              <input\r\n                type=\"email\"\r\n                className=\"email\"\r\n                placeholder=\"Email or Phone\"\r\n                value={this.state.email}\r\n                name=\"email\"\r\n                onChange={this.handleChange}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"field spase\">\r\n              <span className=\"fa fa-lock\"></span>\r\n              <input\r\n                type=\"password\"\r\n                className=\"password\"\r\n                placeholder=\"Password\"\r\n                value={this.state.password}\r\n                name=\"password\"\r\n                onChange={this.handleChange}\r\n                required\r\n              />\r\n              <span className=\"show\" onClick={showPassword}>\r\n                SHOW\r\n              </span>\r\n            </div>\r\n            <div className=\"field spase\">\r\n              <span className=\"fa fa-lock\"></span>\r\n              <input\r\n                type=\"password\"\r\n                className=\"confirmPassword\"\r\n                placeholder=\"Confirm password\"\r\n                value={this.state.confirmPassword}\r\n                name=\"confirmPassword\"\r\n                onChange={this.handleChange}\r\n                required\r\n              />\r\n              <span className=\"confirmShow\" onClick={showConfirmPassword}>\r\n                SHOW\r\n              </span>\r\n            </div>\r\n            <div className=\"field spase\">\r\n              <input type=\"submit\" value=\"REGISTER\" />\r\n            </div>\r\n            <div className=\"signup\">\r\n              Already have an account?\r\n              <NavLink to={\"/login\"}>\r\n                <span>Login</span>\r\n              </NavLink>\r\n            </div>\r\n            {errorNotification}\r\n            {this.state.password !== this.state.confirmPassword && (\r\n              <div className=\"notConfirm\">Password is not confirmid!</div>\r\n            )}\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register = React.memo(Register);\r\n"],"sourceRoot":""}