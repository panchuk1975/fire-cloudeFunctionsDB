{"version":3,"sources":["pages/LegalPersons.js","mathfunctions/listFunctions.js","components/5_create_components/CreateComponent.js","mathfunctions/liquidsFunctions.js","components/6_common_help_comp/ShowBox.js","components/3_sub_conteiners/ProjectsComponent.js","components/2_conteiners/PersonsComp.js"],"names":["LegalPersons","memo","windowWidth","email","fire","auth","currentUser","split","useContext","FirebaseContext","clients","projects","payments","dates","userInfos","loading","fetchDates","fetchUsersInfo","fetchClients","openClient","clouseClient","removeClient","addProject","openProject","clouseProject","openCurrentProject","clouseCurrentProject","removeProject","fetchProjects","addPayment","openPayment","openNewPayment","clouseNewPayment","clousePayment","fetchPayments","useEffect","console","log","clientType","NewListLiquidsCount","routes","oldRouteNumber","listLiquids","map","route","balanceStart","received","expended","balanceFinish","filter","liq","name","liquidName","length","modifyLiquid","shift","modifyLiquidList","parseInt","Number","routNumber","Liquid","concat","sort","a","b","moment","require","CreateComponent","client","userInfo","firebase","useState","alertClass","setAlertClass","alertText","setAlertText","initialForm","openList","companyName","secName","firstName","thirdName","contractNumber","adress","phonNumber","addPhonNumber","dateOfNegotiations","Date","format","negotiationsResult","incomingSourse","dateOfSignContract","contractPeriod","registrationDate","ipNumber","passportNumber","additionalInfo","form","setForm","changeHandler","event","target","currentTarget","value","classClientBasis","className","htmlFor","type","onChange","placeholder","required","onClick","owner","uid","isClientExists","preventDefault","company","jointCompany","changeClient","then","catch","addClient","setTimeout","modalClass","modalText","modalFunction","ExportReactCSV","csvData","fileName","textCSV","e","wb","Sheets","data","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToCSV","ShowBox","id","ProjectsComponent","newProjects","setFunct","setModalText","setModalClass","setId","openClientTableClass","carRoutes","openNewList","clouseNewList","closeNewRoute","closeList","closeRoute","changeListRouteTime","ownerDates","find","date","dateStart","dateFinish","currentClientPayments","pay","projectOwner","sizeArray","SizeNameArray","summArray","numb","i","summ","size","align","width","fullName","component","project","currentProjectPayments","paymentOwner","payData","projectDataArray","ProjectDataArray","projectReadinessDateClass","projectReadinessDate","signaturуOfActClass","signaturуOfAct","poketExistenceClass","poketExistence","contractExistenceClass","contractExistence","openDeleteProjectButtonClass","disableDeleteProjectButtonClass","key","classNames","timeout","disabled","style","marginRight","PersonsComp","setClass","fun","textModal","Id","info","userInUse","infoUse","clientsExists","projectNumber","openDeleteButtonClass","disableDeleteButtonClass","innerFunction"],"mappings":"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","file":"static/js/7.3f40e0fc.chunk.js","sourcesContent":["import React, { useContext, useEffect, memo } from \"react\";\r\nimport { PersonsComp } from \"../components/2_conteiners/PersonsComp\";\r\nimport { FirebaseContext } from \"../context/fiebase/firebaseContext\";\r\nimport { Loader } from \"../components/6_common_help_comp/Loader\";\r\nimport fire from \"../config/Fire\";\r\n\r\nconst LegalPersons = memo(({ windowWidth }) => {\r\n  const clientType = \"Юрідичний\";\r\n  let email = \"\";\r\n  if (fire.auth.currentUser) {\r\n    email = fire.auth.currentUser.email;\r\n    email = email.split(\"@\")[0];\r\n  }\r\n  const {\r\n    clients,\r\n    projects,\r\n    payments,\r\n    dates,\r\n    userInfos,\r\n\r\n    loading,\r\n    fetchDates,\r\n    fetchUsersInfo,\r\n    fetchClients,\r\n   \r\n    openClient,\r\n    clouseClient,\r\n    removeClient,\r\n\r\n    addProject,\r\n    openProject,\r\n    clouseProject,\r\n    openCurrentProject,\r\n    clouseCurrentProject,\r\n    removeProject,\r\n    fetchProjects,\r\n\r\n    addPayment,\r\n    openPayment,\r\n    openNewPayment,\r\n    clouseNewPayment,\r\n    clousePayment,\r\n    fetchPayments,\r\n  } = useContext(FirebaseContext);\r\n  useEffect(() => {\r\n    fetchClients();\r\n    fetchDates();\r\n    fetchUsersInfo();\r\n    fetchPayments();\r\n    fetchProjects();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n  console.log(userInfos)\r\n  return (\r\n    <div>\r\n      <small>{email}</small>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n          <PersonsComp\r\n            dates={dates}\r\n            clients={clients}\r\n            projects={projects}\r\n            payments={payments}\r\n            userInfos={userInfos}\r\n            openClient={openClient}\r\n            clouseClient={clouseClient}\r\n            removeClient={removeClient}\r\n            addProject={addProject}\r\n            openProject={openProject}\r\n            openCurrentProject={openCurrentProject}\r\n            clouseCurrentProject={clouseCurrentProject}\r\n            clouseProject={clouseProject}\r\n            removeProject={removeProject}\r\n            addPayment={addPayment}\r\n            openPayment={openPayment}\r\n            clousePayment={clousePayment}\r\n            openNewPayment={openNewPayment}\r\n            clouseNewPayment={clouseNewPayment}\r\n            clientType={clientType}\r\n            windowWidth={windowWidth}\r\n          />\r\n        )}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default LegalPersons;\r\n","export const NewListLiquidsCount = (routes) => {\r\n  let oldRouteNumber = 0;\r\n  let listLiquids = [];\r\n  if (!routes) {\r\n    routes = [];\r\n  }\r\n  routes.map((route) => {\r\n    let balanceStart = 0;\r\n    let received = 0;\r\n    let expended = 0;\r\n    let balanceFinish = 0;\r\n    let existLiquid = !!listLiquids.filter(\r\n      (liq) => liq.name === route.liquidName\r\n    ).length;\r\n    if (!existLiquid) {\r\n      balanceStart =\r\n        parseInt((balanceStart + Number(route.balanceStart)) * 100, 10) / 100;\r\n      received = parseInt((received + Number(route.received)) * 100, 10) / 100;\r\n      expended = parseInt((expended + Number(route.expended)) * 100, 10) / 100;\r\n      balanceFinish =\r\n        parseInt((balanceFinish + Number(route.balanceFinish)) * 100, 10) / 100;\r\n      let Liquid = {\r\n        name: route.liquidName,\r\n        balanceStart: balanceStart,\r\n        received: received,\r\n        expended: expended,\r\n        balanceFinish: balanceFinish,\r\n      };\r\n      listLiquids = listLiquids.concat([Liquid]);\r\n    } else {\r\n      let modifyLiquid = listLiquids\r\n        .filter((liq) => liq.name === route.liquidName)\r\n        .shift();\r\n      let modifyLiquidList = listLiquids.filter(\r\n        (liq) => liq.name !== route.liquidName\r\n      );\r\n      balanceStart =\r\n        parseInt(Number(modifyLiquid.balanceStart) * 100, 10) / 100;\r\n      if (Number(route.routNumber) < Number(oldRouteNumber)) {\r\n        balanceStart = parseInt(Number(route.balanceStart) * 100) / 100;\r\n      } else {\r\n        balanceStart =\r\n          parseInt(Number(modifyLiquid.balanceStart) * 100, 10) / 100;\r\n      }\r\n      received =\r\n        parseInt(\r\n          (Number(modifyLiquid.received) + Number(route.received)) * 100,\r\n          10\r\n        ) / 100;\r\n      expended =\r\n        parseInt(\r\n          (Number(modifyLiquid.expended) + Number(route.expended)) * 100,\r\n          10\r\n        ) / 100;\r\n      if (Number(route.routNumber) < Number(oldRouteNumber)) {\r\n        balanceFinish =\r\n          parseInt(Number(modifyLiquid.balanceFinish) * 100, 10) / 100;\r\n      } else {\r\n        balanceFinish = parseInt(Number(route.balanceFinish) * 100, 10) / 100;\r\n      }\r\n      let Liquid = {\r\n        name: route.liquidName,\r\n        balanceStart: balanceStart,\r\n        received: received,\r\n        expended: expended,\r\n        balanceFinish: balanceFinish,\r\n      };\r\n      listLiquids = modifyLiquidList.concat([Liquid]);\r\n    }\r\n    oldRouteNumber = Number(route.routNumber);\r\n    return route;\r\n  });\r\n  listLiquids.sort((a, b) => a.name - b.name);\r\n  return listLiquids;\r\n};\r\n\r\nexport const CommonListRoute = (routes) => {\r\n  if (!routes) {\r\n    routes = [];\r\n  }\r\n  let commonRoute = 0;\r\n  routes.map((route) => {\r\n    commonRoute = commonRoute + Number(route.routeTotal);\r\n    return route;\r\n  });\r\n  return commonRoute;\r\n};\r\n\r\nexport const CommonListTime = (routes) => {\r\n  if (!routes) {\r\n    routes = [];\r\n  }\r\n  let commonTime = 0;\r\n  routes.map((route) => {\r\n    commonTime = commonTime + Number(route.routTotalTime);\r\n    return route;\r\n  });\r\n  return Math.round(commonTime * 100) / 100;\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport { FirebaseContext } from \"../../context/fiebase/firebaseContext\";\r\nimport { AlertBox } from \"../6_common_help_comp/AlertBox\";\r\nimport fire from \"../../config/Fire\";\r\nvar moment = require(\"moment\");\r\n\r\nexport const CreateComponent = ({ client, clients, userInfo }) => {\r\n  //---CALL CONTEXT--------------------------->\r\n  const firebase = useContext(FirebaseContext);\r\n  //---ALERT BLOCK STATE---------------------->\r\n  let [alertClass, setAlertClass] = useState(\"modal\");\r\n  let [alertText, setAlertText] = useState(\"\");\r\n  //---INITIAL CLIENT FORM-------------------->\r\n  let initialForm = {};\r\n  if (!client) {\r\n    initialForm = {\r\n      clientType: \"Юрідичний\",\r\n      companyName: \"\",\r\n      secName: \"Іванов\",\r\n      firstName: \"Іван\",\r\n      thirdName: \"Іванович\",\r\n      contractNumber: \"\",\r\n      adress: \"Полтава\",\r\n      phonNumber: \"0987896756\",\r\n      addPhonNumber: \"0532678909\",\r\n      dateOfNegotiations: moment(new Date()).format(\"YYYY-MM-DD\"),\r\n      negotiationsResult: \"Не узгоджено\",\r\n      incomingSourse: \"\",\r\n      dateOfSignContract: moment(new Date()).format(\"YYYY-MM-DD\"),\r\n      contractPeriod: 12,\r\n      registrationDate: moment(new Date()).format(\"YYYY-MM-DDTHH:mm\"),\r\n      ipNumber: 22345678865555,\r\n      passportNumber: \"АБ 345678\",\r\n      additionalInfo: \"\",\r\n      openClient: false,\r\n      openList: false,\r\n    };\r\n  } else {\r\n    initialForm = {\r\n      ...client,\r\n      openClient: false,\r\n      openList: false,\r\n    };\r\n  }\r\n  //---INITIAL FORM STATE HENDLER-------------------->\r\n  let [form, setForm] = useState({ ...initialForm });\r\n  const changeHandler = (event) => {\r\n    setForm({ ...form, [event.target.name]: event.currentTarget.value });\r\n  };\r\n  //---CREATE CLIENT-------------------------------->\r\n  const createHandler = (event) => {\r\n    var owner = fire.auth.currentUser.uid;\r\n    clients = clients.filter((client) => client.owner === owner);\r\n    let isClientExists = !!clients.filter(\r\n      // eslint-disable-next-line\r\n      (client) => client.contractNumber === form.contractNumber\r\n    ).length;\r\n    !form.secName && setAlertText(\"Призвіще  обовязкове!\");\r\n    !form.secName && setAlertClass(\"open\");\r\n    event.preventDefault();\r\n    if (form.secName) {\r\n      if (!client) {\r\n        if (!isClientExists) {\r\n          if (userInfo.company === userInfo.jointCompany) {\r\n            firebase\r\n              .addClient(form)\r\n              .then(() => {\r\n              })\r\n              .catch(() => {\r\n                setAlertText(\"Помилка сервера!\");\r\n                setAlertClass(\"open\");\r\n              });\r\n            setAlertText(\"Нового кліента створено!\");\r\n            setAlertClass(\"open\");\r\n          } else {\r\n            setAlertText(\"У Вас відсутні права вносити зміни в документи!\");\r\n            setAlertClass(\"open\");\r\n            return;\r\n          }\r\n        } else {\r\n          setAlertText(\r\n            \"Договір з таким номером вже існує! Оберіть інший або внесіть зміни!\"\r\n          );\r\n          setAlertClass(\"open\");\r\n          return;\r\n        }\r\n        if (form.clientType === \"Юрідичний\") {\r\n          setAlertText(\r\n            \"Нового кліента створено! Для перегляду перейдіть до юридичних осіб.\"\r\n          );\r\n          setAlertClass(\"open\");\r\n        } else if (form.clientType === \"Фізичний\") {\r\n          setAlertText(\r\n            \"Нового кліента створено! Для перегляду перейдіть до фізичних осіб.\"\r\n          );\r\n          setAlertClass(\"open\");\r\n        } else {\r\n          setAlertClass(\"modal\");\r\n        }\r\n      } else {\r\n        if (\r\n          (userInfo.company === userInfo.jointCompany) &\r\n          (userInfo.owner === client.owner)\r\n        ) {\r\n          firebase\r\n            .changeClient(form)\r\n            .then(() => { })\r\n            .catch(() => {\r\n              setAlertText(\"Ошибка сервера!\");\r\n              setAlertClass(\"open\");\r\n            });\r\n          setAlertText(\"Інформацію скореговано!\");\r\n          setAlertClass(\"open\");\r\n        } else {\r\n          setAlertText(\"У Вас відсутні права вносити зміни в документи!\");\r\n          setAlertClass(\"open\");\r\n          return;\r\n        }\r\n      }\r\n      setTimeout(() => {\r\n        setAlertClass(\"modal\");\r\n      }, 1500);\r\n    }\r\n  };\r\n  //-----------------------------Change car basis----------------------------//\r\n  let classClientBasis = null;\r\n  if (!client) {\r\n    classClientBasis = \"createClientBasis\";\r\n  } else {\r\n    classClientBasis = \"modifyClientBasis\";\r\n  }\r\n  //-------------------------------GSX car form------------------------------//\r\n  return (\r\n    <div className={classClientBasis}>\r\n      <div className=\"clientMainForm\">\r\n        <div className=\"d-flex flex-wrap justify-content-between\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"clientType\">\r\n              <small>Оберіть статус кліента:</small>\r\n            </label>\r\n            <div>\r\n              <select\r\n                type=\"text\"\r\n                name=\"clientType\"\r\n                value={form.clientType}\r\n                onChange={changeHandler}\r\n                className=\"custom-select custom-select-sm important\"\r\n              >\r\n                <option className=\"main\" value=\"Юрідичний\">\r\n                  Юрідичний\r\n                </option>\r\n                <option value=\"Юрідичний\">Юрідичний</option>\r\n                <option value=\"Фізичний\">Фізичний</option>\r\n                {/* <option value=\"Автомобіль-агрегат\">Авто-агрегат</option>\r\n                <option value=\"Електроприлад\">Електроприлад</option> */}\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"compamyName\">\r\n              <small>Найменування  компанії</small>\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control important\"\r\n              placeholder=\"Найменування компанії\"\r\n              value={form.companyName || \"\"}\r\n              name=\"companyName\"\r\n              onChange={changeHandler}\r\n            />\r\n          </div><div className=\"form-group\">\r\n            <label htmlFor=\"secName\">\r\n              <small>Призвіще</small>\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control important\"\r\n              placeholder=\"Призвіще\"\r\n              value={form.secName}\r\n              name=\"secName\"\r\n              onChange={changeHandler}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"firstName\">\r\n              <small>Ім'я</small>\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Ім'я\"\r\n              value={form.firstName}\r\n              name=\"firstName\"\r\n              onChange={changeHandler}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"thirdName\">\r\n              <small>По батькові</small>\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"По батькові\"\r\n              value={form.thirdName}\r\n              name=\"thirdName\"\r\n              onChange={changeHandler}\r\n            // required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"contractNumber\">\r\n              <small>Номер договору</small>\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control important\"\r\n              placeholder=\"Номер договору\"\r\n              value={form.contractNumber}\r\n              name=\"contractNumber\"\r\n              onChange={changeHandler}\r\n            // required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"adress\">\r\n              <small>Адреса</small>\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Адреса\"\r\n              value={form.adress}\r\n              name=\"adress\"\r\n              onChange={changeHandler}\r\n            // required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"phonNumber\">\r\n              <small>Телефон</small>\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Телефон\"\r\n              value={form.phonNumber}\r\n              name=\"phonNumber\"\r\n              onChange={changeHandler}\r\n            // required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"addPhonNumber\">\r\n              <small>Додатковтий телефон</small>\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Додатковтий телефон\"\r\n              value={form.addPhonNumber}\r\n              name=\"addPhonNumber\"\r\n              onChange={changeHandler}\r\n            // required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"dateOfNegotiations\">\r\n              <small>Дата переговорів</small>\r\n            </label>\r\n            <input\r\n              type=\"date\"\r\n              className=\"form-control\"\r\n              placeholder=\"Дата переговорів\"\r\n              value={moment(form.dateOfNegotiations).format(\"YYYY-MM-DD\")}\r\n              name=\"dateOfNegotiations\"\r\n              onChange={changeHandler}\r\n            // required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"negotiationsResult\">\r\n              <small>Результат переговорів</small>\r\n            </label>\r\n            <div>\r\n              <select\r\n                type=\"text\"\r\n                name=\"negotiationsResult\"\r\n                value={form.negotiationsResult}\r\n                onChange={changeHandler}\r\n                className=\"custom-select custom-select-sm\"\r\n              >\r\n                <option className=\"main\" value=\"Не узгоджено\">\r\n                  Не узгоджено\r\n                </option>\r\n                <option value=\"Узгоджено\">Узгоджено</option>\r\n                <option value=\"Відкладено\">Відкладено</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"incomingSourse\">\r\n              <small>Джерело надходження</small>\r\n            </label>\r\n            <div>\r\n              <select\r\n                type=\"text\"\r\n                name=\"incomingSourse\"\r\n                value={form.incomingSourse}\r\n                onChange={changeHandler}\r\n                className=\"custom-select custom-select-sm\"\r\n              >\r\n                <option className=\"main\" value=\"Телефон\">\r\n                  Телефон\r\n                </option>\r\n                <option value=\"Сайт\">Сайт</option>\r\n                <option value=\"Ютюб\">Ютюб</option>\r\n                <option value=\"Інше\">Інше</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"dateOfSignContract\">\r\n              <small>Дата укладання договору</small>\r\n            </label>\r\n            <input\r\n              type=\"date\"\r\n              className=\"form-control\"\r\n              placeholder=\"Дата укладання договору\"\r\n              value={moment(form.dateOfSignContract).format(\"YYYY-MM-DD\")}\r\n              name=\"dateOfSignContract\"\r\n              onChange={changeHandler}\r\n            // required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"contractPeriod\">\r\n              <small>Строк дії догшовору, міс</small>\r\n            </label>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              placeholder=\"Строк дії догшовору, міс\"\r\n              value={form.contractPeriod}\r\n              name=\"contractPeriod\"\r\n              onChange={changeHandler}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"ipNumber\">\r\n              <small>ІПН</small>\r\n            </label>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              placeholder=\"ІПН\"\r\n              value={form.ipNumber}\r\n              name=\"ipNumber\"\r\n              onChange={changeHandler}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"passportNumber\">\r\n              <small>Серія та номер паспорту</small>\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Серія та номер паспорту\"\r\n              value={form.passportNumber}\r\n              name=\"passportNumber\"\r\n              onChange={changeHandler}\r\n            // required\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group additionalInfoConteiner\">\r\n          <label htmlFor=\"additionalInfo\">\r\n            <small>Додаткові дані</small>\r\n          </label>\r\n          <textarea\r\n            type=\"text\"\r\n            className=\"form-control additionalInfo\"\r\n            placeholder=\"Додатково\"\r\n            value={form.additionalInfo}\r\n            name=\"additionalInfo\"\r\n            onChange={changeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"d-flex justify-content-between\">\r\n        <button\r\n          className=\"btn btn-success createSaveClientBtn\"\r\n          value=\"Enter\"\r\n          name=\"submit\"\r\n          onClick={createHandler}\r\n        >\r\n          {!client && \"Створити нового клієнта\"}\r\n          {client && \"Зберегти дані\"}\r\n        </button>\r\n      </div>\r\n      <AlertBox\r\n        modalClass={alertClass}\r\n        modalText={alertText}\r\n        modalFunction={setAlertClass}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport * as FileSaver from \"file-saver\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { NewListLiquidsCount } from \"../mathfunctions/listFunctions\";\r\nvar moment = require(\"moment\");\r\n\r\nexport const CountStartDensity = (routes, liquid) => {\r\n  let liquidRoutes = routes.filter((route) => route.liquidName === liquid.name);\r\n  let dansitiesArray = liquidRoutes.map((route) => {\r\n    return route.density;\r\n  });\r\n  return dansitiesArray;\r\n};\r\n\r\nexport const ExportReactCSV = ({ csvData, fileName, textCSV }) => {\r\n  const fileType =\r\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n  const fileExtension = \".xlsx\";\r\n  const exportToCSV = (csvData, fileName) => {\r\n    const ws = XLSX.utils.json_to_sheet(csvData);\r\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\r\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\r\n    const data = new Blob([excelBuffer], { type: fileType });\r\n    FileSaver.saveAs(data, fileName + fileExtension);\r\n  };\r\n  return (\r\n    <button\r\n      onClick={(e) => exportToCSV(csvData, fileName)}\r\n      className=\"btn btn-success createExelBtn\"\r\n    >\r\n      <small>{textCSV}</small>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport const CommonLiquidsCount = (routes, cars) => {\r\n  let commonListLiquids = [];\r\n  let listLiquids = [];\r\n  if (!routes) {\r\n    routes = [];\r\n  }\r\n  cars.map((car) => {\r\n    let carRoutes = routes.filter((route) => route.listOwner === car.id);\r\n    let carListLiquids = NewListLiquidsCount(carRoutes);\r\n    commonListLiquids = commonListLiquids.concat(carListLiquids);\r\n    return car;\r\n  });\r\n  commonListLiquids.map((liquid) => {\r\n    let balanceStart = 0;\r\n    let received = 0;\r\n    let expended = 0;\r\n    let balanceFinish = 0;\r\n    let existLiquid = !!listLiquids.filter((liq) => liq.name === liquid.name)\r\n      .length;\r\n    if (!existLiquid) {\r\n      balanceStart =\r\n        parseInt((balanceStart + Number(liquid.balanceStart)) * 100, 10) / 100;\r\n      received = parseInt((received + Number(liquid.received)) * 100, 10) / 100;\r\n      expended = parseInt((expended + Number(liquid.expended)) * 100, 10) / 100;\r\n      balanceFinish =\r\n        parseInt((balanceFinish + Number(liquid.balanceFinish)) * 100, 10) /\r\n        100;\r\n      let Liquid = {\r\n        name: liquid.name,\r\n        balanceStart: balanceStart,\r\n        received: received,\r\n        expended: expended,\r\n        balanceFinish: balanceFinish,\r\n      };\r\n      listLiquids = listLiquids.concat([Liquid]);\r\n    } else {\r\n      let modifyLiquid = listLiquids\r\n        .filter((liq) => liq.name === liquid.name)\r\n        .shift();\r\n      let modifyLiquidList = listLiquids.filter(\r\n        (liq) => liq.name !== liquid.name\r\n      );\r\n      balanceStart =\r\n        parseInt(\r\n          (Number(modifyLiquid.balanceStart) + Number(liquid.balanceStart)) *\r\n            100,\r\n          10\r\n        ) / 100;\r\n      received =\r\n        parseInt(\r\n          (Number(modifyLiquid.received) + Number(liquid.received)) * 100,\r\n          10\r\n        ) / 100;\r\n      expended =\r\n        parseInt(\r\n          (Number(modifyLiquid.expended) + Number(liquid.expended)) * 100,\r\n          10\r\n        ) / 100;\r\n      balanceFinish =\r\n        parseInt(\r\n          (Number(modifyLiquid.balanceFinish) + Number(liquid.balanceFinish)) *\r\n            100,\r\n          10\r\n        ) / 100;\r\n      let Liquid = {\r\n        name: liquid.name,\r\n        balanceStart: balanceStart,\r\n        received: received,\r\n        expended: expended,\r\n        balanceFinish: balanceFinish,\r\n      };\r\n      listLiquids = modifyLiquidList.concat([Liquid]);\r\n    }\r\n    return liquid;\r\n  });\r\n  listLiquids.sort((a, b) => a.name - b.name);\r\n  return listLiquids;\r\n};\r\n\r\nexport const carLiquidsExelInfo = (cars, lists, routes) => {\r\n  let newCarLiquidsInfo = [];\r\n  cars.map((car) => {\r\n    let newLists = lists.filter((list) => list.listOwner === car.id);\r\n    newLists.sort((a, b) => a.listNumber - b.listNumber);\r\n    let carRoutes = routes.filter((route) => route.listOwner === car.id);\r\n    let listCarLiquids = NewListLiquidsCount(carRoutes);\r\n    let newCarLiquidNull = {\r\n      Найменування: car.typeOfCar,\r\n      Номер: car.governmentCarNumber,\r\n      \"Тип ПММ\": \"---\",\r\n      Було: \"---\",\r\n      Отримано: \"---\",\r\n      Витрачено: \"---\",\r\n      Залишок: \"---\",\r\n    };\r\n    newCarLiquidsInfo = newCarLiquidsInfo.concat(newCarLiquidNull);\r\n    let newCarLiquid = {};\r\n    listCarLiquids.map((liq) => {\r\n      newCarLiquid = {\r\n        Найменування: \"\",\r\n        Номер: \"\",\r\n        \"Тип ПММ\": liq.name,\r\n        Було: liq.balanceStart,\r\n        Отримано: liq.received,\r\n        Витрачено: liq.expended,\r\n        Залишок: liq.balanceFinish,\r\n      };\r\n      newCarLiquidsInfo = newCarLiquidsInfo.concat(newCarLiquid);\r\n      return liq;\r\n    });\r\n    return car;\r\n  });\r\n  return newCarLiquidsInfo;\r\n};\r\n\r\nexport const carListLiquidsExelInfo = (cars, lists, routes) => {\r\n  let newCarListLiquidsInfo = [];\r\n  cars.map((car) => {\r\n    let newLists = lists.filter((list) => list.listOwner === car.id);\r\n    newLists.sort((a, b) => a.listNumber - b.listNumber);\r\n    let newCarListLiquidNull_Car = {\r\n      Номер: car.governmentCarNumber,\r\n      \"Лист №\": \"---\",\r\n      \"Тип ПММ\": \"---\",\r\n      Було: \"---\",\r\n      Отримано: \"---\",\r\n      Витрачено: \"---\",\r\n      Залишок: \"---\",\r\n    };\r\n    newCarListLiquidsInfo = newCarListLiquidsInfo.concat(\r\n      newCarListLiquidNull_Car\r\n    );\r\n    newLists.map((list) => {\r\n      let newCarListLiquidNull_List = {\r\n        Номер: \"---\",\r\n        \"Лист №\": list.listNumber,\r\n        \"Тип ПММ\": \"---\",\r\n        Було: \"---\",\r\n        Отримано: \"---\",\r\n        Витрачено: \"---\",\r\n        Залишок: \"---\",\r\n      };\r\n      newCarListLiquidsInfo = newCarListLiquidsInfo.concat(\r\n        newCarListLiquidNull_List\r\n      );\r\n      let listRoutes = routes.filter((route) => route.routeOwner === list.id);\r\n      let listListLiquids = NewListLiquidsCount(listRoutes);\r\n      let newCarListLiquid = {};\r\n      listListLiquids.map((liq) => {\r\n        newCarListLiquid = {\r\n          Номер: \"---\",\r\n          \"Лист №\": \"---\",\r\n          \"Тип ПММ\": liq.name,\r\n          Було: liq.balanceStart,\r\n          Отримано: liq.received,\r\n          Витрачено: liq.expended,\r\n          Залишок: liq.balanceFinish,\r\n        };\r\n        newCarListLiquidsInfo = newCarListLiquidsInfo.concat(newCarListLiquid);\r\n        return liq;\r\n      });\r\n      return list;\r\n    });\r\n    return car;\r\n  });\r\n  return newCarListLiquidsInfo;\r\n};\r\n\r\nexport const carExelInfo = (cars) => {\r\n  let commonCarsInfo = [];\r\n  cars.map((car) => {\r\n    let TO2 =\r\n      parseInt(\r\n        (Number(car.carIndicatorLastTO2) + Number(car.routeToTO2)) * 100,\r\n        10\r\n      ) / 100;\r\n    let routeToTO2 =\r\n      parseInt(\r\n        (Number(car.carIndicatorLastTO2) +\r\n          Number(car.routeToTO2) -\r\n          Number(car.carIndicatorLast)) *\r\n          100,\r\n        10\r\n      ) / 100;\r\n    let TO1 =\r\n      parseInt(\r\n        (Number(car.carIndicatorLastTO1) + Number(car.routeToTO1)) * 100,\r\n        10\r\n      ) / 100;\r\n    let routeToTO1 =\r\n      parseInt(\r\n        (Number(car.carIndicatorLastTO1) +\r\n          Number(car.routeToTO1) -\r\n          Number(car.carIndicatorLast)) *\r\n          100,\r\n        10\r\n      ) / 100;\r\n    let КР =\r\n      parseInt(\r\n        (Number(car.carIndicatorLastКР) + Number(car.routeToКР)) * 100,\r\n        10\r\n      ) / 100;\r\n    let routeToКР =\r\n      parseInt(\r\n        (Number(car.carIndicatorLastКР) +\r\n          Number(car.routeToКР) -\r\n          Number(car.carIndicatorLast)) *\r\n          100,\r\n        10\r\n      ) / 100;\r\n    let СР =\r\n      parseInt(\r\n        (Number(car.carIndicatorLastСР) + Number(car.routeToСР)) * 100,\r\n        10\r\n      ) / 100;\r\n    let routeToСР =\r\n      parseInt(\r\n        (Number(car.carIndicatorLastСР) +\r\n          Number(car.routeToСР) -\r\n          Number(car.carIndicatorLast)) *\r\n          100,\r\n        10\r\n      ) / 100;\r\n    commonCarsInfo = commonCarsInfo.concat({\r\n      \"Найменув.\": car.typeOfCar,\r\n      Номер: car.governmentCarNumber,\r\n      Пробіг: car.carIndicatorLast,\r\n      Км: car.totalCarMileage,\r\n      \"Напрац.\": car.carTimeFinish,\r\n      Год: car.carTimeTotal,\r\n      \"На дату\": moment(car.dateOfRegistration).format(\"DD.MM HH:mm\"),\r\n      \"№ двиг.\": car.carEngineNumber,\r\n      \"№ шасі\": car.factoryCarNumber,\r\n      \"№ пасп.\": car.factoryCarNumber,\r\n      \"Обладн.\": car.specialCarEquipment,\r\n      \"№ обл.\": car.specialCarEquipmentNumber,\r\n      Власник: car.carOwnerName,\r\n      Вироблено: car.dateOfCarProduction,\r\n      Група: car.operatingGroup,\r\n      Категорія: car.category,\r\n      TO1: TO1,\r\n      \"До ТО1\": routeToTO1,\r\n      TO2: TO2,\r\n      \"До ТО2\": routeToTO2,\r\n      СР: СР,\r\n      \"До СР\": routeToСР,\r\n      КР: КР,\r\n      \"До КР\": routeToКР,\r\n      Стан: car.serviceabilityreason,\r\n    });\r\n    return car;\r\n  });\r\n  return commonCarsInfo;\r\n};\r\n\r\nexport const agrExelInfo = (cars) => {\r\n  let commonCarsInfo = [];\r\n  cars.map((car) => {\r\n    let timeTO2 =\r\n      parseInt(\r\n        (Number(car.carTimeLastTO2) + Number(car.nextTimeTO2)) * 100,\r\n        10\r\n      ) / 100;\r\n    let timeToTO2 =\r\n      parseInt(\r\n        (Number(car.carTimeLastTO2) +\r\n          Number(car.nextTimeTO2) -\r\n          Number(car.carTimeFinish)) *\r\n          100,\r\n        10\r\n      ) / 100;\r\n    let timeTO1 =\r\n      parseInt(\r\n        (Number(car.carTimeLastTO1) + Number(car.nextTimeTO1)) * 100,\r\n        10\r\n      ) / 100;\r\n    let timeToTO1 =\r\n      parseInt(\r\n        (Number(car.carTimeLastTO1) +\r\n          Number(car.nextTimeTO1) -\r\n          Number(car.carTimeFinish)) *\r\n          100,\r\n        10\r\n      ) / 100;\r\n    let timeКР =\r\n      parseInt((Number(car.carTimeLastКР) + Number(car.nextTimeКР)) * 100, 10) /\r\n      100;\r\n    let timeToКР =\r\n      parseInt(\r\n        (Number(car.carTimeLastКР) +\r\n          Number(car.nextTimeКР) -\r\n          Number(car.carTimeFinish)) *\r\n          100,\r\n        10\r\n      ) / 100;\r\n    let timeСР =\r\n      parseInt((Number(car.carTimeLastСР) + Number(car.nextTimeСР)) * 100, 10) /\r\n      100;\r\n    let timeToСР =\r\n      parseInt(\r\n        (Number(car.carTimeLastСР) +\r\n          Number(car.nextTimeСР) -\r\n          Number(car.carTimeFinish)) *\r\n          100,\r\n        10\r\n      ) / 100;\r\n    commonCarsInfo = commonCarsInfo.concat({\r\n      \"Найменув.\": car.typeOfCar,\r\n      Номер: car.governmentCarNumber,\r\n      Пробіг: car.carIndicatorLast,\r\n      Км: car.totalCarMileage,\r\n      \"Напрац.\": car.carTimeFinish,\r\n      Год: car.carTimeTotal,\r\n      \"На дату\": moment(car.dateOfRegistration).format(\"DD.MM HH:mm\"),\r\n      \"№ двиг.\": car.carEngineNumber,\r\n      \"№ шасі\": car.factoryCarNumber,\r\n      \"№ пасп.\": car.factoryCarNumber,\r\n      \"Обладн.\": car.specialCarEquipment,\r\n      \"№ обл.\": car.specialCarEquipmentNumber,\r\n      Власник: car.carOwnerName,\r\n      Вироблено: car.dateOfCarProduction,\r\n      Група: car.operatingGroup,\r\n      Категорія: car.category,\r\n      \"Час ТО1\": timeTO1,\r\n      \"Час до ТО1\": timeToTO1,\r\n      \"Час ТО2\": timeTO2,\r\n      \"Час до ТО2\": timeToTO2,\r\n      \"Час СР\": timeСР,\r\n      \"Час до СР\": timeToСР,\r\n      \"Час КР\": timeКР,\r\n      \"Час до КР\": timeToКР,\r\n      Стан: car.serviceabilityreason,\r\n    });\r\n    return car;\r\n  });\r\n  return commonCarsInfo;\r\n};\r\n\r\nexport const agrCarExelInfo = (cars) => {\r\n  let commonCarsInfo = [];\r\n  cars.map((car) => {\r\n    let TO2 =\r\n      parseInt(\r\n        (Number(car.carIndicatorLastTO2) + Number(car.routeToTO2)) * 100,\r\n        10\r\n      ) / 100;\r\n    let routeToTO2 =\r\n      parseInt(\r\n        (Number(car.carIndicatorLastTO2) +\r\n          Number(car.routeToTO2) -\r\n          Number(car.carIndicatorLast)) *\r\n          100,\r\n        10\r\n      ) / 100;\r\n    let TO1 =\r\n      parseInt(\r\n        (Number(car.carIndicatorLastTO1) + Number(car.routeToTO1)) * 100,\r\n        10\r\n      ) / 100;\r\n    let routeToTO1 =\r\n      parseInt(\r\n        (Number(car.carIndicatorLastTO1) +\r\n          Number(car.routeToTO1) -\r\n          Number(car.carIndicatorLast)) *\r\n          100,\r\n        10\r\n      ) / 100;\r\n    let timeTO2 =\r\n      parseInt(\r\n        (Number(car.carTimeLastTO2) + Number(car.nextTimeTO2)) * 100,\r\n        10\r\n      ) / 100;\r\n    let timeToTO2 =\r\n      parseInt(\r\n        (Number(car.carTimeLastTO2) +\r\n          Number(car.nextTimeTO2) -\r\n          Number(car.carTimeFinish)) *\r\n          100,\r\n        10\r\n      ) / 100;\r\n    let timeTO1 =\r\n      parseInt(\r\n        (Number(car.carTimeLastTO1) + Number(car.nextTimeTO1)) * 100,\r\n        10\r\n      ) / 100;\r\n    let timeToTO1 =\r\n      parseInt(\r\n        (Number(car.carTimeLastTO1) +\r\n          Number(car.nextTimeTO1) -\r\n          Number(car.carTimeFinish)) *\r\n          100,\r\n        10\r\n      ) / 100;\r\n    let КР =\r\n      parseInt(\r\n        (Number(car.carIndicatorLastКР) + Number(car.routeToКР)) * 100,\r\n        10\r\n      ) / 100;\r\n    let routeToКР =\r\n      parseInt(\r\n        (Number(car.carIndicatorLastКР) +\r\n          Number(car.routeToКР) -\r\n          Number(car.carIndicatorLast)) *\r\n          100,\r\n        10\r\n      ) / 100;\r\n    let СР =\r\n      parseInt(\r\n        (Number(car.carIndicatorLastСР) + Number(car.routeToСР)) * 100,\r\n        10\r\n      ) / 100;\r\n    let routeToСР =\r\n      parseInt(\r\n        (Number(car.carIndicatorLastСР) +\r\n          Number(car.routeToСР) -\r\n          Number(car.carIndicatorLast)) *\r\n          100,\r\n        10\r\n      ) / 100;\r\n    let timeКР =\r\n      parseInt((Number(car.carTimeLastКР) + Number(car.nextTimeКР)) * 100, 10) /\r\n      100;\r\n    let timeToКР =\r\n      parseInt(\r\n        (Number(car.carTimeLastКР) +\r\n          Number(car.nextTimeКР) -\r\n          Number(car.carTimeFinish)) *\r\n          100,\r\n        10\r\n      ) / 100;\r\n    let timeСР =\r\n      parseInt((Number(car.carTimeLastСР) + Number(car.nextTimeСР)) * 100, 10) /\r\n      100;\r\n    let timeToСР =\r\n      parseInt(\r\n        (Number(car.carTimeLastСР) +\r\n          Number(car.nextTimeСР) -\r\n          Number(car.carTimeFinish)) *\r\n          100,\r\n        10\r\n      ) / 100;\r\n    commonCarsInfo = commonCarsInfo.concat({\r\n      \"Найменув.\": car.typeOfCar,\r\n      Номер: car.governmentCarNumber,\r\n      Пробіг: car.carIndicatorLast,\r\n      Км: car.totalCarMileage,\r\n      \"Напрац.\": car.carTimeFinish,\r\n      Год: car.carTimeTotal,\r\n      \"На дату\": moment(car.dateOfRegistration).format(\"DD.MM HH:mm\"),\r\n      \"№ двиг.\": car.carEngineNumber,\r\n      \"№ шасі\": car.factoryCarNumber,\r\n      \"№ пасп.\": car.factoryCarNumber,\r\n      \"Обладн.\": car.specialCarEquipment,\r\n      \"№ обл.\": car.specialCarEquipmentNumber,\r\n      Власник: car.carOwnerName,\r\n      Вироблено: car.dateOfCarProduction,\r\n      Група: car.operatingGroup,\r\n      Категорія: car.category,\r\n      TO1: TO1,\r\n      \"До ТО1\": routeToTO1,\r\n      TO2: TO2,\r\n      \"До ТО2\": routeToTO2,\r\n      СР: СР,\r\n      \"До СР\": routeToСР,\r\n      КР: КР,\r\n      \"До КР\": routeToКР,\r\n      \"Час ТО1\": timeTO1,\r\n      \"Час до ТО1\": timeToTO1,\r\n      \"Час ТО2\": timeTO2,\r\n      \"Час до ТО2\": timeToTO2,\r\n      \"Час СР\": timeСР,\r\n      \"Час до СР\": timeToСР,\r\n      \"Час КР\": timeКР,\r\n      \"Час до КР\": timeToКР,\r\n      Стан: car.serviceabilityreason,\r\n    });\r\n    return car;\r\n  });\r\n  return commonCarsInfo;\r\n};\r\n\r\nexport const instExelInfo = (cars) => {\r\n  let commonCarsInfo = [];\r\n  cars.map((car) => {\r\n    let timeTO2 =\r\n      parseInt(\r\n        (Number(car.carTimeLastTO2) + Number(car.nextTimeTO2)) * 100,\r\n        10\r\n      ) / 100;\r\n    let timeToTO2 =\r\n      parseInt(\r\n        (Number(car.carTimeLastTO2) +\r\n          Number(car.nextTimeTO2) -\r\n          Number(car.carTimeFinish)) *\r\n          100,\r\n        10\r\n      ) / 100;\r\n    let timeTO1 =\r\n      parseInt(\r\n        (Number(car.carTimeLastTO1) + Number(car.nextTimeTO1)) * 100,\r\n        10\r\n      ) / 100;\r\n    let timeToTO1 =\r\n      parseInt(\r\n        (Number(car.carTimeLastTO1) +\r\n          Number(car.nextTimeTO1) -\r\n          Number(car.carTimeFinish)) *\r\n          100,\r\n        10\r\n      ) / 100;\r\n    let timeКР =\r\n      parseInt((Number(car.carTimeLastКР) + Number(car.nextTimeКР)) * 100, 10) /\r\n      100;\r\n    let timeToКР =\r\n      parseInt(\r\n        (Number(car.carTimeLastКР) +\r\n          Number(car.nextTimeКР) -\r\n          Number(car.carTimeFinish)) *\r\n          100,\r\n        10\r\n      ) / 100;\r\n    let timeСР =\r\n      parseInt((Number(car.carTimeLastСР) + Number(car.nextTimeСР)) * 100, 10) /\r\n      100;\r\n    let timeToСР =\r\n      parseInt(\r\n        (Number(car.carTimeLastСР) +\r\n          Number(car.nextTimeСР) -\r\n          Number(car.carTimeFinish)) *\r\n          100,\r\n        10\r\n      ) / 100;\r\n    commonCarsInfo = commonCarsInfo.concat({\r\n      \"Найменув.\": car.typeOfCar,\r\n      Номер: car.governmentCarNumber,\r\n      Пробіг: car.carIndicatorLast,\r\n      Км: car.totalCarMileage,\r\n      \"Напрац.\": car.carTimeFinish,\r\n      Год: car.carTimeTotal,\r\n      \"На дату\": moment(car.dateOfRegistration).format(\"DD.MM HH:mm\"),\r\n      \"№ двиг.\": car.carEngineNumber,\r\n      \"№ шасі\": car.factoryCarNumber,\r\n      \"№ пасп.\": car.factoryCarNumber,\r\n      \"Обладн.\": car.specialCarEquipment,\r\n      \"№ обл.\": car.specialCarEquipmentNumber,\r\n      Власник: car.carOwnerName,\r\n      Вироблено: car.dateOfCarProduction,\r\n      Група: car.operatingGroup,\r\n      Категорія: car.category,\r\n      \"Час ТО1\": timeTO1,\r\n      \"Час до ТО1\": timeToTO1,\r\n      \"Час ТО2\": timeTO2,\r\n      \"Час до ТО2\": timeToTO2,\r\n      \"Час СР\": timeСР,\r\n      \"Час до СР\": timeToСР,\r\n      \"Час КР\": timeКР,\r\n      \"Час до КР\": timeToКР,\r\n      Стан: car.serviceabilityreason,\r\n    });\r\n    return car;\r\n  });\r\n  return commonCarsInfo;\r\n};\r\n\r\nexport const instTimeExelInfo = (cars, lists, routes) => {\r\n  let newCarListTimesInfo = [];\r\n  cars.map((car) => {\r\n    let newLists = lists.filter((list) => list.listOwner === car.id);\r\n    newLists.sort((a, b) => a.listNumber - b.listNumber);\r\n    let newCarListLiquidNull_Car = {\r\n      Назва: car.typeOfCar,\r\n      Номер: car.governmentCarNumber,\r\n      \"Лист №\": \"---\",\r\n      Годин: \"---\",\r\n      \"Час початку\": \"---\",\r\n      \"Час закінчення\": \"---\",\r\n      Мета: \"---\",\r\n      Зауваження: \"---\",\r\n    };\r\n    newCarListTimesInfo = newCarListTimesInfo.concat(newCarListLiquidNull_Car);\r\n    newLists.map((list) => {\r\n      let newCarListLiquidNull_List = {\r\n        Назва: \"---\",\r\n        Номер: \"---\",\r\n        \"Лист №\": list.listNumber,\r\n        Годин: \"---\",\r\n        \"Час початку\": \"---\",\r\n        \"Час закінчення\": \"---\",\r\n        Мета: \"---\",\r\n        Зауваження: \"---\",\r\n      };\r\n      newCarListTimesInfo = newCarListTimesInfo.concat(\r\n        newCarListLiquidNull_List\r\n      );\r\n      let listRoutes = routes.filter((route) => route.routeOwner === list.id);\r\n      let newCarListLiquid = {};\r\n      listRoutes.map((route) => {\r\n        newCarListLiquid = {\r\n          Номер: \"---\",\r\n          \"Лист №\": \"---\",\r\n          Годин: route.routTotalTime,\r\n          \"Час початку\": moment(route.routDate).format(\"DD.MM HH:mm\"),\r\n          \"Час закінчення\": moment(route.routArrival).format(\"DD.MM HH:mm\"),\r\n          Мета: route.cargoName,\r\n          Зауваження: route.routeTo,\r\n        };\r\n        newCarListTimesInfo = newCarListTimesInfo.concat(newCarListLiquid);\r\n        return route;\r\n      });\r\n      return list;\r\n    });\r\n    return car;\r\n  });\r\n  return newCarListTimesInfo;\r\n};\r\n","import React from \"react\";\r\n\r\nexport const ShowBox = ({ modalClass, modalText, modalFunction }) => {\r\n  let setClass = () => {\r\n    modalFunction(\"modal\");\r\n  };\r\n  return (\r\n    <div id={modalClass}>\r\n      <div className=\"showWindow\">\r\n        <div className={modalClass}>\r\n          <div className=\"top-show-content\">\r\n            <button\r\n              id=\"deleteShowModal\"\r\n              type=\"button\"\r\n              className=\"btn btn-outline-secondary btn-sm\"\r\n              onClick={() => setClass()}\r\n            >\r\n              &times;\r\n            </button>\r\n            <p>{modalText}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { memo } from \"react\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n//import { NewListLiquidsCount } from \"../mathfunctions/listFunctions\";\r\nimport { CreateProject } from \"../5_create_components/CreateProject\";\r\nimport { SizeNameArray, ProjectDataArray } from \"../../helpComponents/dataFunctions\";\r\nimport { PaymentComponent } from \"../4_render_components/PaymentComponent\";\r\nimport fire from \"../../config/Fire\";\r\nvar moment = require(\"moment\");\r\n\r\nexport const ProjectsComponent = memo(\r\n  ({\r\n    payments,\r\n    client,\r\n    dates,\r\n    userInfo,\r\n    newProjects,\r\n\r\n    openProject,\r\n    clouseProject,\r\n    openCurrentProject,\r\n    clouseCurrentProject,\r\n\r\n    windowWidth,\r\n    setAlertClass,\r\n    setAlertText,\r\n    setFunct,\r\n    setModalText,\r\n    setModalClass,\r\n    setId,\r\n    modalClass,\r\n    openClientTableClass,\r\n\r\n    carRoutes,\r\n    //routes,\r\n    openNewList,\r\n    clouseNewList,\r\n    addPayment,\r\n    closeNewRoute,\r\n    openList,\r\n    closeList,\r\n    openPayment,\r\n    clousePayment,\r\n    openNewPayment,\r\n    clouseNewPayment,\r\n    closeRoute,\r\n\r\n    changeListRouteTime,\r\n    //listCarLiquids,\r\n  }) => {\r\n    let dataListWarningText =\r\n      \"Видалення проекту! Для видалення клієнту необхідно видалити всі проекти!!!\";\r\n    let owner = fire.auth.currentUser.uid;\r\n    let ownerDates = dates.find((date) => date.owner === owner);\r\n    if (!ownerDates) {\r\n      ownerDates = {\r\n        dateStart: \"1970-01-01T00:00\",\r\n        dateFinish: \"2070-01-01T00:00\",\r\n      };\r\n    }\r\n    //let listCarLiquids = [];\r\n    // newProjects = newProjects.filter((project) => project.progectDate >= ownerDates.dateStart);\r\n    // newProjects = newProjects.filter(\r\n    //   (project) => project.listDate <= ownerDates.dateFinish\r\n    // );\r\n    let currentClientPayments = payments.filter((pay) => pay.projectOwner === client.id);\r\n\r\n    //--TABLE FUNCTION-------------------------->\r\n    let sizeArray = SizeNameArray(windowWidth);\r\n    const summArray = (numb, sizeArray) => {\r\n      let i = 0;\r\n      let summ = 0;\r\n      while (i < numb) {\r\n        summ = summ + sizeArray[i].size;\r\n        i++;\r\n      }\r\n      return summ;\r\n    };\r\n    //-----------------------RENDER----------------->\r\n    return (\r\n      <form>\r\n        <details>\r\n          <summary id=\"summary\">\r\n            <div\r\n              id=\"summaryConteiner\"\r\n              className=\"d-flex justify-content-between\"\r\n            >\r\n              <small id=\"small\">Проекти</small>\r\n              {userInfo.company === userInfo.jointCompany && (\r\n                <small id=\"small\" className=\"smallEnd\">\r\n                  {/* {car.objectPassword} */}\r\n                </small>\r\n              )}\r\n            </div>\r\n          </summary>\r\n          <div className=\"d-flex justify-content-between\">\r\n            <table className=\"headTable\">\r\n              <tbody>\r\n                <tr align=\"center\">\r\n                  {windowWidth > 75 + summArray(1, sizeArray) && (\r\n                    <td width={sizeArray[0].size}\r\n                      onClick={() => {\r\n                        setFunct(\"showFunction\");\r\n                        setModalText(sizeArray[0].fullName);\r\n                        setModalClass();\r\n                      }}\r\n                    >\r\n                      <small>{sizeArray[0].name}</small>\r\n                    </td>\r\n                  )}\r\n                  {windowWidth > 75 + summArray(2, sizeArray) && (\r\n                    <td width={sizeArray[1].size}\r\n                      onClick={() => {\r\n                        setFunct(\"showFunction\");\r\n                        setModalText(sizeArray[1].fullName);\r\n                        setModalClass();\r\n                      }}\r\n                    >\r\n                      <small>{sizeArray[1].name}</small>\r\n                    </td>\r\n                  )}\r\n                  {windowWidth > 75 + summArray(3, sizeArray) && (\r\n                    <td width={sizeArray[2].size}\r\n                      onClick={() => {\r\n                        setFunct(\"showFunction\");\r\n                        setModalText(sizeArray[2].fullName);\r\n                        setModalClass();\r\n                      }}\r\n                    >\r\n                      <small>{sizeArray[2].name}</small>\r\n                    </td>\r\n                  )}\r\n                  {windowWidth > 75 + summArray(4, sizeArray) && (\r\n                    <td width={sizeArray[3].size}\r\n                      onClick={() => {\r\n                        setFunct(\"showFunction\");\r\n                        setModalText(sizeArray[3].fullName);\r\n                        setModalClass();\r\n                      }}\r\n                    >\r\n                      <small>{sizeArray[3].name}</small>\r\n                    </td>\r\n                  )}\r\n                  {windowWidth > 75 + summArray(5, sizeArray) && (\r\n                    <td width={sizeArray[4].size}\r\n                      onClick={() => {\r\n                        setFunct(\"showFunction\");\r\n                        setModalText(sizeArray[4].fullName);\r\n                        setModalClass();\r\n                      }}\r\n                    >\r\n                      <small>{sizeArray[4].name}</small>\r\n                    </td>\r\n                  )}\r\n                  {windowWidth > 75 + summArray(6, sizeArray) && (\r\n                    <td width={sizeArray[5].size}\r\n                      onClick={() => {\r\n                        setFunct(\"showFunction\");\r\n                        setModalText(sizeArray[5].fullName);\r\n                        setModalClass();\r\n                      }}\r\n                    >\r\n                      <small>{sizeArray[5].name}</small>\r\n                    </td>\r\n                  )}\r\n                  {windowWidth > 75 + summArray(7, sizeArray) && (\r\n                    <td width={sizeArray[6].size}\r\n                      onClick={() => {\r\n                        setFunct(\"showFunction\");\r\n                        setModalText(sizeArray[6].fullName);\r\n                        setModalClass();\r\n                      }}\r\n                    >\r\n                      <small>{sizeArray[6].name}</small>\r\n                    </td>\r\n                  )}\r\n                  {windowWidth > 75 + summArray(8, sizeArray) && (\r\n                    <td width={sizeArray[7].size}\r\n                      onClick={() => {\r\n                        setFunct(\"showFunction\");\r\n                        setModalText(sizeArray[7].fullName);\r\n                        setModalClass();\r\n                      }}\r\n                    >\r\n                      <small>{sizeArray[7].name}</small>\r\n                    </td>\r\n                  )}\r\n                  {windowWidth > 75 + summArray(9, sizeArray) && (\r\n                    <td width={sizeArray[8].size}\r\n                      onClick={() => {\r\n                        setFunct(\"showFunction\");\r\n                        setModalText(sizeArray[8].fullName);\r\n                        setModalClass();\r\n                      }}\r\n                    >\r\n                      <small>{sizeArray[8].name}</small>\r\n                    </td>\r\n                  )}\r\n                  {windowWidth > 75 + summArray(10, sizeArray) && (\r\n                    <td width={sizeArray[9].size}\r\n                      onClick={() => {\r\n                        setFunct(\"showFunction\");\r\n                        setModalText(sizeArray[9].fullName);\r\n                        setModalClass();\r\n                      }}\r\n                    >\r\n                      <small>{sizeArray[9].name}</small>\r\n                    </td>\r\n                  )}\r\n                  {windowWidth > 75 + summArray(11, sizeArray) && (\r\n                    <td width={sizeArray[10].size}\r\n                      onClick={() => {\r\n                        setFunct(\"showFunction\");\r\n                        setModalText(sizeArray[10].fullName);\r\n                        setModalClass();\r\n                      }}\r\n                    >\r\n                      <small>{sizeArray[10].name}</small>\r\n                    </td>\r\n                  )}\r\n                  {windowWidth > 75 + summArray(12, sizeArray) && (\r\n                    <td width={sizeArray[11].size}\r\n                      onClick={() => {\r\n                        setFunct(\"showFunction\");\r\n                        setModalText(sizeArray[11].fullName);\r\n                        setModalClass();\r\n                      }}\r\n                    >\r\n                      <small>{sizeArray[11].name}</small>\r\n                    </td>\r\n                  )}\r\n                  {windowWidth > 75 + summArray(13, sizeArray) && (\r\n                    <td width={sizeArray[12].size}\r\n                      onClick={() => {\r\n                        setFunct(\"showFunction\");\r\n                        setModalText(sizeArray[12].fullName);\r\n                        setModalClass();\r\n                      }}\r\n                    >\r\n                      <small>{sizeArray[12].name}</small>\r\n                    </td>\r\n                  )}\r\n                  {windowWidth > 75 + summArray(14, sizeArray) && (\r\n                    <td width={sizeArray[13].size}\r\n                      onClick={() => {\r\n                        setFunct(\"showFunction\");\r\n                        setModalText(sizeArray[13].fullName);\r\n                        setModalClass();\r\n                      }}\r\n                    >\r\n                      <small>{sizeArray[13].name}</small>\r\n                    </td>\r\n                  )}\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <TransitionGroup component=\"ul\" className=\"project-group\">\r\n            {newProjects.map((project) => {\r\n              let currentProjectPayments = currentClientPayments.filter(\r\n                (pay) => pay.paymentOwner === project.id\r\n              );\r\n              currentProjectPayments.sort((a, b) => a.payData - b.payData);\r\n              //let listLiquids = NewListLiquidsCount(newRoutes);\r\n\r\n              //--PROJECTS DATA ARRAY-------------------------->\r\n              const projectDataArray = ProjectDataArray(project);\r\n              //--DYNAMIC CLASSES ----------------------------->\r\n              let projectReadinessDateClass = (moment(new Date(project.projectReadinessDate))\r\n                .format(\"YYYY-MM-DD\") >= moment(new Date())\r\n                  .format(\"YYYY-MM-DD\")) ? \"goodTime\" : \"badTime\";\r\n              let signaturуOfActClass = (project.signaturуOfAct === \"Так\") ? \"good\" : \"bad\";\r\n              let poketExistenceClass = (project.poketExistence === \"Так\") ? \"good\" : \"bad\";\r\n              let contractExistenceClass = (project.contractExistence === \"Так\") ? \"good\" : \"bad\";\r\n              //--DELETE BUTTON -->\r\n              let openDeleteProjectButtonClass = null;\r\n              if (project.openProject) {\r\n                openDeleteProjectButtonClass = \"deleteButtonItemAreClouse\";\r\n              }\r\n              if (currentProjectPayments.length) {\r\n                openDeleteProjectButtonClass = \"deleteButtonItemAreClouse\";\r\n              }\r\n              if (userInfo.company !== userInfo.jointCompany) {\r\n                openDeleteProjectButtonClass = \"deleteButtonItemAreClouse\";\r\n              }\r\n              //--DISABLE BUTTON--->\r\n              let disableDeleteProjectButtonClass = \"deleteButtonItemAreClouse\";\r\n              if (currentProjectPayments.length) {\r\n                disableDeleteProjectButtonClass = \"\";\r\n              }\r\n              if (userInfo.company !== userInfo.jointCompany) {\r\n                disableDeleteProjectButtonClass = \"\";\r\n              }\r\n              if (project.openProject) {\r\n                disableDeleteProjectButtonClass = \"deleteButtonItemAreClouse\";\r\n              }\r\n              return (\r\n                <CSSTransition\r\n                  key={project.id}\r\n                  classNames={\"note\"}\r\n                  timeout={800}\r\n                >\r\n                  <li\r\n                    key={project.id}\r\n                    className=\"project-group-item projectInnerLi\"\r\n                  >\r\n                    {!project.openProject && (\r\n                      <div key={project.id} className=\"projectBasis\">\r\n                        <div className=\"d-flex justify-content-between\">\r\n                          <table\r\n                            className=\"projectTable\"\r\n                            onClick={() => openCurrentProject(project)}\r\n                          >\r\n                            <tbody>\r\n                              <tr align=\"center\">\r\n                                {windowWidth > 75 + summArray(1, sizeArray) && (\r\n                                  <td width={sizeArray[0].size} className=\"head\">\r\n                                    <small className=\"projectName\"\r\n                                    >{projectDataArray[0]}</small>\r\n                                  </td>\r\n                                )}\r\n                                {windowWidth > 75 + summArray(2, sizeArray) && (\r\n                                  <td width={sizeArray[1].size}\r\n                                    className={`head ${projectReadinessDateClass}`}>\r\n                                    <small className=\"smallProjectDateBold\"\r\n                                    >{`${moment(\r\n                                      projectDataArray[1]\r\n                                    ).format(\"DD.MM.YY\")}`}</small>\r\n                                  </td>\r\n                                )}\r\n                                {windowWidth > 75 + summArray(3, sizeArray) && (\r\n                                  <td width={sizeArray[2].size}>\r\n                                    <small\r\n                                      className={contractExistenceClass}\r\n                                    >{projectDataArray[2]}</small>\r\n                                  </td>\r\n                                )}\r\n                                {windowWidth > 75 + summArray(4, sizeArray) && (\r\n                                  <td width={sizeArray[3].size}>\r\n                                    <small\r\n                                      className={signaturуOfActClass\r\n                                      }>{projectDataArray[3]}</small>\r\n                                  </td>\r\n                                )}\r\n                                {windowWidth > 75 + summArray(5, sizeArray) && (\r\n                                  <td width={sizeArray[4].size}>\r\n                                    <small\r\n                                      className={poketExistenceClass}\r\n                                    >{projectDataArray[4]}</small>\r\n                                  </td>\r\n                                )}\r\n                                {windowWidth > 75 + summArray(6, sizeArray) && (\r\n                                  <td width={sizeArray[5].size}>\r\n                                    <small>{projectDataArray[5]}</small>\r\n                                  </td>\r\n                                )}\r\n                                {windowWidth > 75 + summArray(7, sizeArray) && (\r\n                                  <td width={sizeArray[6].size}>\r\n                                    <small>{projectDataArray[6]}</small>\r\n                                  </td>\r\n                                )}\r\n                                {windowWidth > 75 + summArray(8, sizeArray) && (\r\n                                  <td width={sizeArray[7].size}>\r\n                                    <small>{projectDataArray[7]}</small>\r\n                                  </td>\r\n                                )}\r\n                                {windowWidth > 75 + summArray(9, sizeArray) && (\r\n                                  <td width={sizeArray[8].size} className=\"head\">\r\n                                    <small>{`${moment(\r\n                                      projectDataArray[8]\r\n                                    ).format(\"DD.MM.YY\")}`}</small>\r\n                                  </td>\r\n                                )}\r\n                                {windowWidth > 75 + summArray(10, sizeArray) && (\r\n                                  <td width={sizeArray[9].size}>\r\n                                    <small>{projectDataArray[9]}</small>\r\n                                  </td>\r\n                                )}\r\n                                {windowWidth >\r\n                                  75 + summArray(11, sizeArray) && (\r\n                                    <td width={sizeArray[10].size}>\r\n                                      <small>{projectDataArray[10]}</small>\r\n                                    </td>\r\n                                  )}\r\n                                {windowWidth >\r\n                                  75 + summArray(12, sizeArray) && (\r\n                                    <td width={sizeArray[11].size}>\r\n                                      <small>\r\n                                        {projectDataArray[11]}\r\n                                      </small>\r\n                                    </td>\r\n                                  )}\r\n                                {windowWidth >\r\n                                  75 + summArray(13, sizeArray) && (\r\n                                    <td width={sizeArray[12].size}>\r\n                                      <small>{projectDataArray[12]}</small>\r\n                                    </td>\r\n                                  )}\r\n                                {windowWidth >\r\n                                  75 + summArray(14, sizeArray) && (\r\n                                    <td width={sizeArray[13].size}>\r\n                                      <small>{projectDataArray[13]}</small>\r\n                                    </td>\r\n                                  )}\r\n                              </tr>\r\n                            </tbody>\r\n                          </table>  \r\n                          <button\r\n                             id=\"deleteProjectBtn\"\r\n                             type=\"button\"\r\n                            className={`btn btn-outline-danger btn-sm deleteProjectBtn ${openDeleteProjectButtonClass}`}\r\n                            onClick={() => {\r\n                              setId(project.id);\r\n                              setFunct(\"removeList\");\r\n                              setModalText(dataListWarningText);\r\n                              setModalClass();\r\n                            }}\r\n                          >\r\n                            &times;\r\n                          </button>\r\n                          <button\r\n                            type=\"button\"\r\n                            className={`bbtn btn-outline-secondary btn-sm deleteProjectBtn ${disableDeleteProjectButtonClass}`}\r\n                            disabled\r\n                          >\r\n                            &times;\r\n                          </button>\r\n                          {/* {!project.openProject &\r\n                            !currentProjectPayments.length &\r\n                            (userInfo.company === userInfo.jointCompany) &\r\n                            (userInfo.owner === client.owner) && (\r\n                              <button\r\n                                id=\"deleteProjectBtn\"\r\n                                type=\"button\"\r\n                                className=\"btn btn-outline-danger btn-sm deleteProjectBtn\"\r\n                                onClick={() => {\r\n                                  setId(project.id);\r\n                                  setFunct(\"removeList\");\r\n                                  setModalText(dataListWarningText);\r\n                                  setModalClass();\r\n                                }}\r\n                              >\r\n                                Х\r\n                              </button>\r\n                            )} */}\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                    <div>\r\n                      <div\r\n                        className=\"clouseProjectBasis\"\r\n                        onClick={() => clouseCurrentProject(project)}\r\n                      >\r\n                        {project.openProject && (\r\n                          <table className=\"clouseProjectForm\">\r\n                            <tbody>\r\n                              <tr className=\"clouseProjectTableButton\">\r\n                                <td>Закрити форму проекта</td>\r\n                              </tr>\r\n                            </tbody>\r\n                          </table>\r\n                        )}\r\n                      </div>\r\n                      {project.openProject && (\r\n                        <CreateProject\r\n                          className={openClientTableClass}\r\n                          client={client}\r\n                          project={project}\r\n                          setAlertText={setAlertText}\r\n                          setAlertClass={setAlertClass}\r\n                          newProjects={newProjects}\r\n                          userInfo={userInfo}\r\n                        />\r\n                      )}\r\n                    </div>\r\n                    <PaymentComponent\r\n                      client={client}\r\n                      payments={payments}\r\n                      project={project}\r\n                      setId={setId}\r\n                      currentProjectPayments={currentProjectPayments}\r\n                      //newCarRoutes={newCarRoutes}\r\n                      openPayment={openPayment}\r\n                      clousePayment={clousePayment}\r\n                      openNewPayment={openNewPayment}\r\n                      clouseNewPayment={clouseNewPayment}\r\n                      addPayment={addPayment}\r\n                      //closeNewRoute={closeNewRoute}\r\n                      setFunct={setFunct}\r\n                      setModalClass={setModalClass}\r\n                      setModalText={setModalText}\r\n                      windowWidth={windowWidth}\r\n                      setAlertText={setAlertText}\r\n                      setAlertClass={setAlertClass}\r\n                      //listLiquids={listLiquids}\r\n                      //changeListRouteTime={changeListRouteTime}\r\n                      modalClass={modalClass}\r\n                      //carRoutes={carRoutes}\r\n                      //clouseNewList={clouseNewList}\r\n                      userInfo={userInfo}\r\n                    />\r\n                  </li>\r\n                </CSSTransition>\r\n              );\r\n            })}\r\n          </TransitionGroup>\r\n          {/* <div id=\"countRoutesGroup\" className=\"d-flex justify-content-between\">\r\n            {windowWidth > 995 &&\r\n              listCarLiquids.map((liquid) => {\r\n                return (\r\n                  <pre key={liquid.name} className=\"listLiquids\">\r\n                    {\" \"}\r\n                    <small className=\"liquidValue\"> {liquid.name}</small>\r\n                    <small className=\"headStart\"> {liquid.balanceStart}</small>\r\n                  </pre>\r\n                );\r\n              })}\r\n            {windowWidth > 512 &&\r\n              listCarLiquids.map((liquid) => {\r\n                return (\r\n                  <pre key={liquid.name} className=\"listLiquids\">\r\n                    {\" \"}\r\n                    <small className=\"liquidValue\"> {liquid.name}</small>\r\n                    <small className=\"headAdd\"> {liquid.received}</small>\r\n                  </pre>\r\n                );\r\n              })}\r\n            {windowWidth > 770 &&\r\n              listCarLiquids.map((liquid) => {\r\n                return (\r\n                  <pre key={liquid.name} className=\"listLiquids\">\r\n                    {\" \"}\r\n                    <small className=\"liquidValue\"> {liquid.name}</small>\r\n                    <small className=\"headExpended\"> {liquid.expended}</small>\r\n                  </pre>\r\n                );\r\n              })}\r\n            {windowWidth > 335 &&\r\n              listCarLiquids.map((liquid) => {\r\n                return (\r\n                  <pre key={liquid.name} className=\"listLiquids\">\r\n                    {\" \"}\r\n                    <small className=\"liquidValue\"> {liquid.name}</small>\r\n                    <small className=\"headEnd\"> {liquid.balanceFinish}</small>\r\n                  </pre>\r\n                );\r\n              })}\r\n          </div> */}\r\n          <div className=\"d-flex justify-content-between projectButtonsGrup\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-outline-primary btn-sm addProjectBtn\"\r\n              onClick={() => openProject(client)}\r\n              style={{ marginRight: 4 }}\r\n            >\r\n              + Проект\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-outline-info btn-sm closeProjectBtn\"\r\n              onClick={() => clouseProject(client)}\r\n              style={{ marginRight: 4 }}\r\n            >\r\n              Закрити\r\n            </button>\r\n          </div>\r\n          {client.openProject && (\r\n            <CreateProject\r\n              client={client}\r\n              setAlertText={setAlertText}\r\n              setAlertClass={setAlertClass}\r\n              newProjects={newProjects}\r\n              userInfo={userInfo}\r\n            />\r\n          )}\r\n        </details>\r\n      </form>\r\n    );\r\n  }\r\n);\r\n","import React, { memo, useState } from \"react\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport // ExportReactCSV,\r\n//carExelInfo,\r\n//carLiquidsExelInfo,\r\n//carListLiquidsExelInfo,\r\n\"../../mathfunctions/liquidsFunctions\";\r\nimport { CreateComponent } from \"../5_create_components/CreateComponent\";\r\nimport { ModalBox } from \"../6_common_help_comp/ModalBox\";\r\nimport { AlertBox } from \"../6_common_help_comp/AlertBox\";\r\nimport { ShowBox } from \"../6_common_help_comp/ShowBox\";\r\nimport fire from \"../../config/Fire\";\r\nimport { ProjectsComponent } from \"../3_sub_conteiners/ProjectsComponent\";\r\nvar moment = require(\"moment\");\r\n\r\nexport const PersonsComp = memo(\r\n  ({\r\n    //---COMMON DATES ----------------------->\r\n    windowWidth,\r\n    clientType,\r\n    //---COMMON STATE ----------------------->\r\n    dates,\r\n    userInfos,\r\n    clients,\r\n    projects,\r\n    //---CLIENT FUNCTIONS ------------------->\r\n    removeClient,\r\n    openClient,\r\n    clouseClient,\r\n    //---PROJECTS FUNCTIONS ----------------->\r\n    addProject,\r\n    openProject,\r\n    clouseProject,\r\n    removeProject,\r\n    openCurrentProject,\r\n    clouseCurrentProject,\r\n    //---PAYMENTS FUNCTIONS ------------------>\r\n    payments,\r\n    addPayment,\r\n    openPayment,\r\n    clousePayment,\r\n    openNewPayment,\r\n    clouseNewPayment,\r\n\r\n\r\n    //routes,\r\n    // openNewList,\r\n    // clouseNewList,\r\n    // openNewRoute,\r\n    // closeNewRoute,\r\n    // openList,\r\n    // closeList,\r\n    // openRoute,\r\n    // closeRoute,\r\n  }) => {\r\n    //---Alert functions block---------------->\r\n    const dataWarningText =\r\n      \"Ви намагаєтеся видалити дані! Після видалення відновлення даних буде не можливим!\";\r\n    let [alertClass, setAlertClass] = useState(\"modal\");\r\n    let [alertText, setAlertText] = useState(\"\");\r\n    let [modalClass, setClass] = useState(\"modal\");\r\n    let [fun, setFunct] = useState(\"\");\r\n    let [textModal, setModalText] = useState();\r\n    let [Id, setId] = useState();\r\n    let setModalClass = () => {\r\n      if ((modalClass = \"modal\")) {\r\n        setClass(\"open\");\r\n      } else {\r\n        setClass(\"modal\");\r\n      }\r\n    };\r\n    //--Create user data----------------------->\r\n    var owner = fire.auth.currentUser.uid;\r\n    let userInfo = userInfos.find((info) => info.owner === owner);\r\n    if (!userInfo) {\r\n      return null;\r\n    }\r\n    let userInUse = userInfos.find(\r\n      (infoUse) => infoUse.company === userInfo.jointCompany\r\n    );\r\n    if (!userInUse) {\r\n      return null;\r\n    }\r\n    //--Create clients data array--------------->\r\n    clients = clients.filter((client) => client.owner === userInUse.owner);\r\n    clients = clients.filter((client) => client.clientType === clientType);\r\n    clients.sort(\r\n      (a, b) => new Date(b.registrationDate) - new Date(a.registrationDate)\r\n    );\r\n    let clientsExists = clients.length;\r\n    if (clientsExists === 0) {\r\n      return null;\r\n    }\r\n    //---------------------------------Cars JSX block----------------------------------//\r\n    return (\r\n      <div>\r\n        <div>\r\n          <TransitionGroup component=\"ul\" className=\"list-group\">\r\n            {clientsExists &&\r\n              clients.map((client) => {\r\n                //--------------------Create client projects and routes-----------------------//\r\n                let newProjects = projects.filter(\r\n                  (project) => project.projectOwner === client.id\r\n                );\r\n                newProjects.sort((a, b) => a.projectNumber - b.projectNumber);\r\n                // let carRoutes = routes.filter(\r\n                //   (route) => route.listOwner === client.id\r\n                // );\r\n                // //---------------------------Car liquids array---------------------------//\r\n                // let listCarLiquids = NewListLiquidsCount(carRoutes);\r\n\r\n                //--CLIENT TYPE DYNAMIC CLASSIS ----------->\r\n                let clientType = null;\r\n                if (client.clientType === \"Юрідичний\") {\r\n                  clientType = \"legalClients\";\r\n                } else {\r\n                  clientType = \"unlegalClients\";\r\n                }\r\n                //--DYNAMIC CLASSIS---------------------->\r\n                //--TABLE----->\r\n                let openClientTableClass = null;\r\n                if (client.openClient) {\r\n                  openClientTableClass = \"tableItemsAreClouse\";\r\n                }\r\n                //--DELETE BUTTON -->\r\n                let openDeleteButtonClass = null;\r\n                if (client.openClient) {\r\n                  openDeleteButtonClass = \"deleteButtonItemAreClouse\";\r\n                }\r\n                if (newProjects.length) {\r\n                  openDeleteButtonClass = \"deleteButtonItemAreClouse\";\r\n                }\r\n                if (userInfo.company !== userInfo.jointCompany) {\r\n                  openDeleteButtonClass = \"deleteButtonItemAreClouse\";\r\n                }\r\n                //--DISABLE BUTTON--->\r\n                let disableDeleteButtonClass = \"deleteButtonItemAreClouse\";\r\n                if (newProjects.length) {\r\n                  disableDeleteButtonClass = \"\";\r\n                }\r\n                if (userInfo.company !== userInfo.jointCompany) {\r\n                  disableDeleteButtonClass = \"\";\r\n                }\r\n                if (client.openClient) {\r\n                  disableDeleteButtonClass = \"deleteButtonItemAreClouse\";\r\n                }\r\n                //----TABLE SIZE FUNCTION---------------->\r\n                const sizeArray = [\r\n                  180,\r\n                  105,\r\n                  80,\r\n                  120,\r\n                  90,\r\n                  80,\r\n                  40,\r\n                  80,\r\n                  300,\r\n                  70,\r\n                  90,\r\n                  90\r\n                ];\r\n                const summArray = (numb, sizeArray) => {\r\n                  let i = 0;\r\n                  let summ = 0;\r\n                  while (i < numb) {\r\n                    summ = summ + sizeArray[i];\r\n                    i++;\r\n                  }\r\n                  return summ;\r\n                };\r\n                //---------------------------CLIENTS RENDER----------------------------//\r\n                return (\r\n                  <CSSTransition\r\n                    key={client.id}\r\n                    classNames={\"note\"}\r\n                    timeout={800}\r\n                  >\r\n                    <li\r\n                      key={client.id}\r\n                      className=\"list-group-item clientInnerLi\"\r\n                    >\r\n                      <form className=\"d-flex justify-content-between clientInnerForm\">\r\n                        <table\r\n                          className={`clientTable ${openClientTableClass}`}\r\n                          onClick={() => {\r\n                            openClient(client);\r\n                          }}\r\n                        >\r\n                          <tbody>\r\n                            <tr align=\"center\">\r\n                            {windowWidth > 70 + summArray(1, sizeArray) && (\r\n                              <td width={sizeArray[0]}>\r\n                                <small className={clientType}>\r\n                                  {client.companyName}\r\n                                </small>\r\n                              </td>\r\n                            )}\r\n                               {windowWidth > 70 + summArray(2, sizeArray) && (\r\n                                <td width={sizeArray[1]}>\r\n                                  <small>{client.secName}</small>\r\n                                </td>\r\n                              )}\r\n                              {windowWidth > 70 + summArray(3, sizeArray) && (\r\n                                <td width={sizeArray[2]}>\r\n                                  <small>{client.firstName}</small>\r\n                                </td>\r\n                              )}\r\n                              {windowWidth > 70 + summArray(4, sizeArray) && (\r\n                                <td width={sizeArray[3]}>\r\n                                  <small>{client.thirdName}</small>\r\n                                </td>\r\n                              )}\r\n                              {windowWidth > 70 + summArray(5, sizeArray) && (\r\n                                <td width={sizeArray[4]}>\r\n                                  <small>{client.phonNumber}</small>\r\n                                </td>\r\n                              )}\r\n                              {windowWidth > 70 + summArray(6, sizeArray) && (\r\n                                <td width={sizeArray[5]}>\r\n                                  <small>{client.contractNumber}</small>\r\n                                </td>\r\n                              )}\r\n                              {windowWidth > 70 + summArray(7, sizeArray) && (\r\n                                <td width={sizeArray[6]}>\r\n                                  <small>{client.contractPeriod}</small>\r\n                                </td>\r\n                              )}\r\n                              {windowWidth > 70 + summArray(8, sizeArray) && (\r\n                                <td width={sizeArray[7]}>\r\n                                  <small>\r\n                                    {`${moment(client.registrationDate).format(\r\n                                      \"DD.MM HH:mm\"\r\n                                    )}`}\r\n                                  </small>\r\n                                </td>\r\n                              )}\r\n                              {windowWidth > 70 + summArray(9, sizeArray) && (\r\n                                <td width={sizeArray[8]}>\r\n                                  <small>{client.adress}</small>\r\n                                </td>\r\n                              )}\r\n                              {windowWidth > 70 + summArray(10, sizeArray) && (\r\n                                <td width={sizeArray[9]}>\r\n                                  <small>{client.incomingSourse}</small>\r\n                                </td>\r\n                              )}\r\n                              {windowWidth > 70 + summArray(11, sizeArray) && (\r\n                                <td width={sizeArray[10]}>\r\n                                  <small>{client.dateOfSignContract}</small>\r\n                                </td>\r\n                              )}\r\n                              {windowWidth > 70 + summArray(12, sizeArray) && (\r\n                                <td width={sizeArray[11]}>\r\n                                  <small className=\"negotiationsResult\">\r\n                                    {client.negotiationsResult}\r\n                                  </small>\r\n                                </td>\r\n                              )}\r\n                              {/* {windowWidth > 1201 && (\r\n                                    <td width=\"90\">\r\n                                      <small className={clientType}>ТО1: </small>\r\n                                      <small className={typeRouteTO1}>\r\n                                        {TO1}\r\n                                      </small>\r\n                                    </td>\r\n                                  )}\r\n                                */}\r\n                            </tr>\r\n                          </tbody>\r\n                        </table>\r\n                        <div>\r\n                          <button\r\n                            type=\"button\"\r\n                            className={`btn btn-outline-danger btn-sm deleteCarBtn ${openDeleteButtonClass}`}\r\n                            onClick={() => {\r\n                              setId(client.id);\r\n                              setFunct(\"removeCar\");\r\n                              setModalText(dataWarningText);\r\n                              setModalClass();\r\n                            }}\r\n                          >\r\n                            &times;\r\n                          </button>\r\n                          <button\r\n                            type=\"button\"\r\n                            className={`btn btn-outline-secondary btn-sm deleteCarBtn ${disableDeleteButtonClass}`}\r\n                            disabled\r\n                          >\r\n                            &times;\r\n                          </button>\r\n                          {client.openClient && (\r\n                            <table\r\n                              className=\"clientTable\"\r\n                              onClick={() => {\r\n                                clouseClient(client);\r\n                              }}\r\n                            >\r\n                              <tbody>\r\n                                <tr align=\"center\">\r\n                                  <td width=\"200\">\r\n                                    <small className={clientType}>\r\n                                      For close\r\n                                    </small>\r\n                                    {/* <small className={typeRouteКР}>{КР}</small> */}\r\n                                  </td>\r\n                                  {windowWidth > 247 && (\r\n                                    <td width=\"100\" className={clientType}>\r\n                                      <small>Info</small>\r\n                                    </td>\r\n                                  )}\r\n                                  {windowWidth > 247 && (\r\n                                    <td width=\"100\" className={clientType}>\r\n                                      <small>Info</small>\r\n                                    </td>\r\n                                  )}\r\n                                  {windowWidth > 247 && (\r\n                                    <td width=\"100\" className={clientType}>\r\n                                      <small>Info</small>\r\n                                    </td>\r\n                                  )}\r\n                                  {windowWidth > 247 && (\r\n                                    <td width=\"100\" className={clientType}>\r\n                                      <small>Info</small>\r\n                                    </td>\r\n                                  )}\r\n                                  {windowWidth > 247 && (\r\n                                    <td width=\"100\" className={clientType}>\r\n                                      <small>Info</small>\r\n                                    </td>\r\n                                  )}\r\n                                </tr>\r\n                              </tbody>\r\n                            </table>\r\n                          )}\r\n                          {client.openClient && (\r\n                            <CreateComponent\r\n                              client={client}\r\n                              clients={clients}\r\n                              userInfo={userInfo}\r\n                            />\r\n                          )}\r\n                        </div>\r\n                      </form>\r\n                      <form className=\"addingObjTable\"></form>\r\n                      {!client.openClient && (\r\n                        <ProjectsComponent\r\n                          client={client}\r\n                          dates={dates}\r\n                          payments={payments}\r\n                          newProjects={newProjects}\r\n                          addPayment={addPayment}\r\n                          //closeNewRoute={closeNewRoute}\r\n                          addProject={addProject}\r\n                          openProject={openProject}\r\n                          clouseProject={clouseProject}\r\n                          removeProject={removeProject}\r\n                          openCurrentProject={openCurrentProject}\r\n                          clouseCurrentProject={clouseCurrentProject}\r\n                          openPayment={openPayment}\r\n                          clousePayment={clousePayment}\r\n                          openNewPayment={openNewPayment}\r\n                          clouseNewPayment={clouseNewPayment}\r\n                          windowWidth={windowWidth}\r\n                          setAlertClass={setAlertClass}\r\n                          setAlertText={setAlertText}\r\n                          setFunct={setFunct}\r\n                          setModalText={setModalText}\r\n                          setModalClass={setModalClass}\r\n                          setId={setId}\r\n                          modalClass={modalClass}\r\n                          //carRoutes={carRoutes}\r\n                          //listCarLiquids={listCarLiquids}\r\n                          userInfo={userInfo}\r\n                        />\r\n                      )}\r\n                    </li>\r\n                  </CSSTransition>\r\n                );\r\n              })}\r\n            {fun === \"removeCar\" && (\r\n              <ModalBox\r\n                modalClass={modalClass}\r\n                modalText={textModal}\r\n                modalFunction={setClass}\r\n                Id={Id}\r\n                innerFunction={removeClient}\r\n              />\r\n            )}\r\n            {fun === \"removeList\" && (\r\n              <ModalBox\r\n                modalClass={modalClass}\r\n                modalText={textModal}\r\n                modalFunction={setClass}\r\n                Id={Id}\r\n                innerFunction={removeProject}\r\n              />\r\n            )}\r\n            {fun === \"showFunction\" && (\r\n              <ShowBox\r\n                modalClass={modalClass}\r\n                modalText={textModal}\r\n                modalFunction={setClass}\r\n              />\r\n            )}\r\n            <AlertBox\r\n              modalClass={alertClass}\r\n              modalText={alertText}\r\n              modalFunction={setAlertClass}\r\n            />\r\n          </TransitionGroup>\r\n        </div>\r\n        <div className=\"d-flex justify-content-between\">\r\n          {/* <ExportReactCSV\r\n            csvData={carExelInfo(clients)}\r\n            fileName={\"авто\"}\r\n            textCSV=\"авто.xlx\"\r\n          /> */}\r\n          {/* <ExportReactCSV\r\n            csvData={carLiquidsExelInfo(clients, lists, routes)}\r\n            fileName={\"пммАвто\"}\r\n            textCSV=\"пмм.xlx\"\r\n          /> */}\r\n          {/* <ExportReactCSV\r\n            csvData={carListLiquidsExelInfo(clients, lists, routes)}\r\n            fileName={\"пммЛист\"}\r\n            textCSV=\"листи.xlx\"\r\n          />    */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n"],"sourceRoot":""}