{"version":3,"sources":["components/CreateComponent.js","mathfunctions/listFunctions.js","components/ShowBox.js","components/ProjectsComponent.js","mathfunctions/liquidsFunctions.js","components/PersonsComp.js","pages/UnlegalPersons.js"],"names":["moment","require","CreateComponent","client","clients","userInfo","firebase","useContext","FirebaseContext","useState","alertClass","setAlertClass","alertText","setAlertText","initialForm","openClient","openList","clientType","companyName","secName","firstName","thirdName","contractNumber","adress","phonNumber","addPhonNumber","dateOfNegotiations","Date","format","negotiationsResult","incomingSourse","dateOfSignContract","contractPeriod","registrationDate","ipNumber","passportNumber","additionalInfo","form","setForm","changeHandler","event","target","name","currentTarget","value","classClientBasis","className","htmlFor","type","onChange","placeholder","required","onClick","owner","fire","auth","currentUser","uid","isClientExists","filter","length","preventDefault","company","jointCompany","changeClient","then","catch","addClient","setTimeout","modalClass","modalText","modalFunction","NewListLiquidsCount","routes","oldRouteNumber","listLiquids","map","route","balanceStart","received","expended","balanceFinish","liq","liquidName","modifyLiquid","shift","modifyLiquidList","parseInt","Number","routNumber","Liquid","concat","sort","a","b","ShowBox","id","ProjectsComponent","memo","dates","newProjects","openProject","clouseProject","openCurrentProject","clouseCurrentProject","windowWidth","setFunct","setModalText","setModalClass","setId","openClientTableClass","carRoutes","openNewList","clouseNewList","openNewRoute","closeNewRoute","closeList","openRoute","closeRoute","changeListRouteTime","ownerDates","find","date","dateStart","dateFinish","sizeArray","SizeNameArray","summArray","numb","i","summ","size","align","width","fullName","component","project","projectDataArray","ProjectDataArray","projectReadinessDateClass","projectReadinessDate","signaturуOfActClass","signaturуOfAct","poketExistenceClass","poketExistence","contractExistenceClass","contractExistence","key","classNames","timeout","style","marginRight","PersonsComp","userInfos","projects","removeClient","clouseClient","addProject","removeProject","setClass","fun","textModal","Id","info","userInUse","infoUse","clientsExists","TransitionGroup","projectOwner","projectNumber","openDeleteButtonClass","disableDeleteButtonClass","CSSTransition","disabled","ModalBox","innerFunction","AlertBox","UnlegalPersons","email","split","loading","fetchClients","fetchDates","fetchUsersInfo","fetchProjects","useEffect"],"mappings":"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","file":"static/js/8.6b47cb66.chunk.js","sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport { FirebaseContext } from \"../context/fiebase/firebaseContext\";\r\nimport { AlertBox } from \"./AlertBox\";\r\nimport fire from \"../config/Fire\";\r\nvar moment = require(\"moment\");\r\n\r\nexport const CreateComponent = ({ client, clients, userInfo }) => {\r\n  //-----------------------------Call stand by--------------------------------//\r\n  const firebase = useContext(FirebaseContext);\r\n  //------------------------------Alert block---------------------------------//\r\n  let [alertClass, setAlertClass] = useState(\"modal\");\r\n  let [alertText, setAlertText] = useState(\"\");\r\n  //--------------------------------Car form----------------------------------//\r\n  let initialForm = {};\r\n  if (!client) {\r\n    initialForm = {\r\n      clientType: \"Юрідичний\",// driver\r\n      companyName: \"\",// typeOfCar\r\n      secName: \"Іванов\", //carEngineNumber\r\n      firstName: \"Іван\",// govermentCarNumber\r\n      thirdName: \"Іванович\", //factoryCarNumber,\r\n      contractNumber: \"\", //carPassportNumber,\r\n      adress: \"Полтава\", //operatingGroup,\r\n      phonNumber: \"0987896756\",//specialCarEquipmentNumber,\r\n      addPhonNumber: \"0532678909\",//specialCarEquipmentNumber,\r\n      dateOfNegotiations: moment(new Date()).format(\"YYYY-MM-DD\"),\r\n      negotiationsResult: \"Не узгоджено\",\r\n      incomingSourse: \"\",\r\n      dateOfSignContract: moment(new Date()).format(\"YYYY-MM-DD\"),\r\n      contractPeriod: 12,\r\n      registrationDate: moment(new Date()).format(\"YYYY-MM-DDTHH:mm\"),\r\n      ipNumber: 22345678865555,\r\n      passportNumber:\"АБ 345678\",\r\n      additionalInfo: \"\",\r\n      openClient: false,\r\n      openList: false,\r\n    };\r\n  } else {\r\n    initialForm = {\r\n      ...client,\r\n      openClient: false,\r\n      openList: false,\r\n    };\r\n  }\r\n  //---------------------------Form state-------------------------------//\r\n  let [form, setForm] = useState({ ...initialForm });\r\n  const changeHandler = (event) => {\r\n    setForm({ ...form, [event.target.name]: event.currentTarget.value });\r\n     };\r\n  //-------------------------Create Car function------------------------//\r\n  const createHandler = (event) => {\r\n    var owner = fire.auth.currentUser.uid;\r\n    clients = clients.filter((client) => client.owner === owner);\r\n    let isClientExists = !!clients.filter(\r\n      // eslint-disable-next-line\r\n      (client) => client.contractNumber === form.contractNumber\r\n    ).length;\r\n    !form.secName && setAlertText(\"Призвіще  обовязкове!\");\r\n    !form.secName && setAlertClass(\"open\");\r\n    event.preventDefault();\r\n    if (form.secName) {\r\n      if (!client) {\r\n        if (!isClientExists) {\r\n          if (userInfo.company === userInfo.jointCompany) {\r\n            firebase\r\n              .addClient(form)\r\n              .then(() => {\r\n              //firebase.changeCreate();\r\n              })\r\n              .catch(() => {\r\n                setAlertText(\"Ошибка сервера!\");\r\n                setAlertClass(\"open\");\r\n              });\r\n              setAlertText(\"Нового кліента створено!\");\r\n              setAlertClass(\"open\");\r\n          } else {\r\n            setAlertText(\"У Вас відсутні права вносити зміни в документи!\");\r\n            setAlertClass(\"open\");\r\n            return;\r\n          }\r\n        } else {\r\n          setAlertText(\r\n            \"Договір з таким номером вже існує! Оберіть інший або внесіть зміни!\"\r\n          );\r\n          setAlertClass(\"open\");\r\n          return;\r\n        }\r\n        if (form.clientType === \"Юрідичний\") {\r\n          setAlertText(\r\n            \"Нового кліента створено! Для перегляду перейдіть до юридичних осіб.\"\r\n          );\r\n          setAlertClass(\"open\");\r\n        } else if (form.clientType ===  \"Фізичний\") {\r\n          setAlertText(\r\n            \"Нового кліента створено! Для перегляду перейдіть до фізичних осіб.\"\r\n          );\r\n          setAlertClass(\"open\");\r\n         } else {\r\n          setAlertClass(\"modal\");\r\n        }\r\n      } else {\r\n        if (\r\n          (userInfo.company === userInfo.jointCompany) &\r\n          (userInfo.owner === client.owner)\r\n        ) {\r\n          firebase\r\n            .changeClient(form)\r\n            .then(() => {})\r\n            .catch(() => {\r\n              setAlertText(\"Ошибка сервера!\");\r\n              setAlertClass(\"open\");\r\n            });\r\n          setAlertText(\"Інформацію скореговано!\");\r\n          setAlertClass(\"open\");\r\n        } else {\r\n          setAlertText(\"У Вас відсутні права вносити зміни в документи!\");\r\n          setAlertClass(\"open\");\r\n          return;\r\n        }\r\n      }\r\n      setTimeout(() => {\r\n        setAlertClass(\"modal\");\r\n      }, 1500);\r\n    }\r\n  };\r\n  //-----------------------------Change car basis----------------------------//\r\n  let classClientBasis = null;\r\n  if (!client) {\r\n    classClientBasis = \"createClientBasis\";\r\n  } else {\r\n    classClientBasis = \"modifyClientBasis\";\r\n  }\r\n  //-------------------------------GSX car form------------------------------//\r\n  return (\r\n    <div className={classClientBasis}>\r\n      <div className=\"clientMainForm\">\r\n        <div className=\"d-flex flex-wrap justify-content-between\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"clientType\">\r\n              <small>Оберіть статус кліента:</small>\r\n            </label>\r\n            <div>\r\n              <select\r\n                type=\"text\"\r\n                name=\"clientType\"\r\n                value={form.clientType}\r\n                onChange={changeHandler}\r\n                className=\"custom-select custom-select-sm important\"\r\n              >\r\n                <option className=\"main\" value=\"Юрідичний\">\r\n                  Юрідичний\r\n                </option>\r\n                <option value=\"Юрідичний\">Юрідичний</option>\r\n                <option value=\"Фізичний\">Фізичний</option>\r\n                {/* <option value=\"Автомобіль-агрегат\">Авто-агрегат</option>\r\n                <option value=\"Електроприлад\">Електроприлад</option> */}\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"compamyName\">\r\n              <small>Найменування  компанії</small>\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control important\"\r\n              placeholder=\"Найменування компанії\"\r\n              value={form.companyName || \"\"}\r\n              name=\"companyName\"\r\n              onChange={changeHandler}\r\n            />\r\n          </div><div className=\"form-group\">\r\n            <label htmlFor=\"secName\">\r\n            <small>Призвіще</small>\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control important\"\r\n              placeholder=\"Призвіще\"\r\n              value={form.secName}\r\n              name=\"secName\"\r\n              onChange={changeHandler}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"firstName\">\r\n              <small>Ім'я</small>\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Ім'я\"\r\n              value={form.firstName}\r\n              name=\"firstName\"\r\n              onChange={changeHandler}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"thirdName\">\r\n              <small>По батькові</small>\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"По батькові\"\r\n              value={form.thirdName}\r\n              name=\"thirdName\"\r\n              onChange={changeHandler}\r\n             // required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"contractNumber\">\r\n              <small>Номер договору</small>\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control important\"\r\n              placeholder=\"Номер договору\"\r\n              value={form.contractNumber}\r\n              name=\"contractNumber\"\r\n              onChange={changeHandler}\r\n             // required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"adress\">\r\n              <small>Адреса</small>\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Адреса\"\r\n              value={form.adress}\r\n              name=\"adress\"\r\n              onChange={changeHandler}\r\n             // required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"phonNumber\">\r\n              <small>Телефон</small>\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Телефон\"\r\n              value={form.phonNumber}\r\n              name=\"phonNumber\"\r\n              onChange={changeHandler}\r\n             // required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"addPhonNumber\">\r\n              <small>Додатковтий телефон</small>\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Додатковтий телефон\"\r\n              value={form.addPhonNumber}\r\n              name=\"addPhonNumber\"\r\n              onChange={changeHandler}\r\n             // required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"dateOfNegotiations\">\r\n              <small>Дата переговорів</small>\r\n            </label>\r\n            <input\r\n              type=\"date\"\r\n              className=\"form-control\"\r\n              placeholder=\"Дата переговорів\"\r\n              value={moment(form.dateOfNegotiations).format(\"YYYY-MM-DD\")}\r\n              name=\"dateOfNegotiations\"\r\n              onChange={changeHandler}\r\n             // required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"negotiationsResult\">\r\n              <small>Результат переговорів</small>\r\n            </label>\r\n            <div>\r\n              <select\r\n                type=\"text\"\r\n                name=\"negotiationsResult\"\r\n                value={form.negotiationsResult}\r\n                onChange={changeHandler}\r\n                className=\"custom-select custom-select-sm\"\r\n              >\r\n                <option className=\"main\" value=\"Не узгоджено\">\r\n                Не узгоджено\r\n                </option>\r\n                <option value=\"Узгоджено\">Узгоджено</option>\r\n                <option value=\"Відкладено\">Відкладено</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"incomingSourse\">\r\n              <small>Джерело надходження</small>\r\n            </label>\r\n            <div>\r\n              <select\r\n                type=\"text\"\r\n                name=\"incomingSourse\"\r\n                value={form.incomingSourse}\r\n                onChange={changeHandler}\r\n                className=\"custom-select custom-select-sm\"\r\n              >\r\n                <option className=\"main\" value=\"Телефон\">\r\n                Телефон\r\n                </option>\r\n                <option value=\"Сайт\">Сайт</option>\r\n                <option value=\"Ютюб\">Ютюб</option>\r\n                <option value=\"Інше\">Інше</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"dateOfSignContract\">\r\n              <small>Дата укладання договору</small>\r\n            </label>\r\n            <input\r\n              type=\"date\"\r\n              className=\"form-control\"\r\n              placeholder=\"Дата укладання договору\"\r\n              value={moment(form.dateOfSignContract).format(\"YYYY-MM-DD\")}\r\n              name=\"dateOfSignContract\"\r\n              onChange={changeHandler}\r\n             // required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n              <label htmlFor=\"contractPeriod\">\r\n                <small>Строк дії догшовору, міс</small>\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                placeholder=\"Строк дії догшовору, міс\"\r\n                value={form.contractPeriod}\r\n                name=\"contractPeriod\"\r\n                onChange={changeHandler}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"ipNumber\">\r\n                <small>ІПН</small>\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                placeholder=\"ІПН\"\r\n                value={form.ipNumber}\r\n                name=\"ipNumber\"\r\n                onChange={changeHandler}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n            <label htmlFor=\"passportNumber\">\r\n              <small>Серія та номер паспорту</small>\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Серія та номер паспорту\"\r\n              value={form.passportNumber}\r\n              name=\"passportNumber\"\r\n              onChange={changeHandler}\r\n             // required\r\n            />\r\n          </div>\r\n        </div>\r\n        <div  className=\"form-group additionalInfoConteiner\">\r\n          <label htmlFor=\"additionalInfo\">\r\n            <small>Додаткові дані</small>\r\n          </label>\r\n          <textarea\r\n            type=\"text\"\r\n            className=\"form-control additionalInfo\"\r\n            placeholder=\"Додатково\"\r\n            value={form.additionalInfo}\r\n            name=\"additionalInfo\"\r\n            onChange={changeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"d-flex justify-content-between\">\r\n        <button\r\n          className=\"btn btn-success createSaveClientBtn\"\r\n          value=\"Enter\"\r\n          name=\"submit\"\r\n          onClick={createHandler}\r\n        >\r\n          {!client && \"Створити нового клієнта\"}\r\n          {client && \"Зберегти дані\"}\r\n        </button>\r\n      </div>\r\n      <AlertBox\r\n        modalClass={alertClass}\r\n        modalText={alertText}\r\n        modalFunction={setAlertClass}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","export const NewListLiquidsCount = (routes) => {\r\n  let oldRouteNumber = 0;\r\n  let listLiquids = [];\r\n  if (!routes) {\r\n    routes = [];\r\n  }\r\n  routes.map((route) => {\r\n    let balanceStart = 0;\r\n    let received = 0;\r\n    let expended = 0;\r\n    let balanceFinish = 0;\r\n    let existLiquid = !!listLiquids.filter(\r\n      (liq) => liq.name === route.liquidName\r\n    ).length;\r\n    if (!existLiquid) {\r\n      balanceStart =\r\n        parseInt((balanceStart + Number(route.balanceStart)) * 100, 10) / 100;\r\n      received = parseInt((received + Number(route.received)) * 100, 10) / 100;\r\n      expended = parseInt((expended + Number(route.expended)) * 100, 10) / 100;\r\n      balanceFinish =\r\n        parseInt((balanceFinish + Number(route.balanceFinish)) * 100, 10) / 100;\r\n      let Liquid = {\r\n        name: route.liquidName,\r\n        balanceStart: balanceStart,\r\n        received: received,\r\n        expended: expended,\r\n        balanceFinish: balanceFinish,\r\n      };\r\n      listLiquids = listLiquids.concat([Liquid]);\r\n    } else {\r\n      let modifyLiquid = listLiquids\r\n        .filter((liq) => liq.name === route.liquidName)\r\n        .shift();\r\n      let modifyLiquidList = listLiquids.filter(\r\n        (liq) => liq.name !== route.liquidName\r\n      );\r\n      balanceStart =\r\n        parseInt(Number(modifyLiquid.balanceStart) * 100, 10) / 100;\r\n      if (Number(route.routNumber) < Number(oldRouteNumber)) {\r\n        balanceStart = parseInt(Number(route.balanceStart) * 100) / 100;\r\n      } else {\r\n        balanceStart =\r\n          parseInt(Number(modifyLiquid.balanceStart) * 100, 10) / 100;\r\n      }\r\n      received =\r\n        parseInt(\r\n          (Number(modifyLiquid.received) + Number(route.received)) * 100,\r\n          10\r\n        ) / 100;\r\n      expended =\r\n        parseInt(\r\n          (Number(modifyLiquid.expended) + Number(route.expended)) * 100,\r\n          10\r\n        ) / 100;\r\n      if (Number(route.routNumber) < Number(oldRouteNumber)) {\r\n        balanceFinish =\r\n          parseInt(Number(modifyLiquid.balanceFinish) * 100, 10) / 100;\r\n      } else {\r\n        balanceFinish = parseInt(Number(route.balanceFinish) * 100, 10) / 100;\r\n      }\r\n      let Liquid = {\r\n        name: route.liquidName,\r\n        balanceStart: balanceStart,\r\n        received: received,\r\n        expended: expended,\r\n        balanceFinish: balanceFinish,\r\n      };\r\n      listLiquids = modifyLiquidList.concat([Liquid]);\r\n    }\r\n    oldRouteNumber = Number(route.routNumber);\r\n    return route;\r\n  });\r\n  listLiquids.sort((a, b) => a.name - b.name);\r\n  return listLiquids;\r\n};\r\n\r\nexport const CommonListRoute = (routes) => {\r\n  if (!routes) {\r\n    routes = [];\r\n  }\r\n  let commonRoute = 0;\r\n  routes.map((route) => {\r\n    commonRoute = commonRoute + Number(route.routeTotal);\r\n    return route;\r\n  });\r\n  return commonRoute;\r\n};\r\n\r\nexport const CommonListTime = (routes) => {\r\n  if (!routes) {\r\n    routes = [];\r\n  }\r\n  let commonTime = 0;\r\n  routes.map((route) => {\r\n    commonTime = commonTime + Number(route.routTotalTime);\r\n    return route;\r\n  });\r\n  return Math.round(commonTime * 100) / 100;\r\n};\r\n","import React from \"react\";\r\n\r\nexport const ShowBox = ({ modalClass, modalText, modalFunction }) => {\r\n  let setClass = () => {\r\n    modalFunction(\"modal\");\r\n  };\r\n  return (\r\n    <div id={modalClass}>\r\n      <div className=\"showWindow\">\r\n        <div className={modalClass}>\r\n          <div className=\"top-show-content\">\r\n            <button\r\n              id=\"deleteShowModal\"\r\n              type=\"button\"\r\n              className=\"btn btn-outline-secondary btn-sm\"\r\n              onClick={() => setClass()}\r\n            >\r\n              &times;\r\n            </button>\r\n            <p>{modalText}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { memo } from \"react\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n//import { NewListLiquidsCount } from \"../mathfunctions/listFunctions\";\r\nimport { CreateProject } from \"./CreateProject\";\r\nimport { SizeNameArray, ProjectDataArray } from \"../helpComponents/dataFunctions\";\r\n//import { RouteComponent } from \"./RouteComponent\";\r\nimport fire from \"../config/Fire\";\r\nvar moment = require(\"moment\");\r\n\r\nexport const ProjectsComponent = memo(\r\n  ({\r\n    client,\r\n    dates,\r\n    userInfo,\r\n    newProjects,\r\n\r\n    openProject,\r\n    clouseProject,\r\n    openCurrentProject,\r\n    clouseCurrentProject,\r\n\r\n    windowWidth,\r\n    setAlertClass,\r\n    setAlertText,\r\n    setFunct,\r\n    setModalText,\r\n    setModalClass,\r\n    setId,\r\n    modalClass,\r\n    openClientTableClass,\r\n\r\n    carRoutes,\r\n    //routes,\r\n    openNewList,\r\n    clouseNewList,\r\n    openNewRoute,\r\n    closeNewRoute,\r\n    openList,\r\n    closeList,\r\n    openRoute,\r\n    closeRoute,\r\n\r\n    changeListRouteTime,\r\n    //listCarLiquids,\r\n  }) => {\r\n    let dataListWarningText =\r\n      \"Видалення проекту! Для видалення клієнту необхідно видалити всі проекти!!!\";\r\n    let owner = fire.auth.currentUser.uid;\r\n    let ownerDates = dates.find((date) => date.owner === owner);\r\n    if (!ownerDates) {\r\n      ownerDates = {\r\n        dateStart: \"1970-01-01T00:00\",\r\n        dateFinish: \"2070-01-01T00:00\",\r\n      };\r\n    }\r\n    //let listCarLiquids = [];\r\n    // newProjects = newProjects.filter((project) => project.progectDate >= ownerDates.dateStart);\r\n    // newProjects = newProjects.filter(\r\n    //   (project) => project.listDate <= ownerDates.dateFinish\r\n    // );\r\n    // let newCarRoutes = routes.filter((route) => route.listOwner === car.id);\r\n\r\n    //--TABLE FUNCTION-------------------------->\r\n    let sizeArray = SizeNameArray(windowWidth);\r\n    const summArray = (numb, sizeArray) => {\r\n      let i = 0;\r\n      let summ = 0;\r\n      while (i < numb) {\r\n        summ = summ + sizeArray[i].size;\r\n        i++;\r\n      }\r\n      return summ;\r\n    };\r\n    //-----------------------RENDER----------------->\r\n    return (\r\n      <form>\r\n        <details>\r\n          <summary id=\"summary\">\r\n            <div\r\n              id=\"summaryConteiner\"\r\n              className=\"d-flex justify-content-between\"\r\n            >\r\n              <small id=\"small\">Проекти</small>\r\n              {userInfo.company === userInfo.jointCompany && (\r\n                <small id=\"small\" className=\"smallEnd\">\r\n                  {/* {car.objectPassword} */}\r\n                </small>\r\n              )}\r\n            </div>\r\n          </summary>\r\n          <div className=\"d-flex justify-content-between\">\r\n            <table className=\"headTable\">\r\n              <tbody>\r\n                <tr align=\"center\">\r\n                  {windowWidth > 75 + summArray(1, sizeArray) && (\r\n                    <td width={sizeArray[0].size}\r\n                      onClick={() => {\r\n                        setFunct(\"showFunction\");\r\n                        setModalText(sizeArray[0].fullName);\r\n                        setModalClass();\r\n                      }}\r\n                    >\r\n                      <small>{sizeArray[0].name}</small>\r\n                    </td>\r\n                  )}\r\n                  {windowWidth > 75 + summArray(2, sizeArray) && (\r\n                    <td width={sizeArray[1].size}\r\n                      onClick={() => {\r\n                        setFunct(\"showFunction\");\r\n                        setModalText(sizeArray[1].fullName);\r\n                        setModalClass();\r\n                      }}\r\n                    >\r\n                      <small>{sizeArray[1].name}</small>\r\n                    </td>\r\n                  )}\r\n                  {windowWidth > 75 + summArray(3, sizeArray) && (\r\n                    <td width={sizeArray[2].size}\r\n                      onClick={() => {\r\n                        setFunct(\"showFunction\");\r\n                        setModalText(sizeArray[2].fullName);\r\n                        setModalClass();\r\n                      }}\r\n                    >\r\n                      <small>{sizeArray[2].name}</small>\r\n                    </td>\r\n                  )}\r\n                  {windowWidth > 75 + summArray(4, sizeArray) && (\r\n                    <td width={sizeArray[3].size}\r\n                      onClick={() => {\r\n                        setFunct(\"showFunction\");\r\n                        setModalText(sizeArray[3].fullName);\r\n                        setModalClass();\r\n                      }}\r\n                    >\r\n                      <small>{sizeArray[3].name}</small>\r\n                    </td>\r\n                  )}\r\n                  {windowWidth > 75 + summArray(5, sizeArray) && (\r\n                    <td width={sizeArray[4].size}\r\n                      onClick={() => {\r\n                        setFunct(\"showFunction\");\r\n                        setModalText(sizeArray[4].fullName);\r\n                        setModalClass();\r\n                      }}\r\n                    >\r\n                      <small>{sizeArray[4].name}</small>\r\n                    </td>\r\n                  )}\r\n                  {windowWidth > 75 + summArray(6, sizeArray) && (\r\n                    <td width={sizeArray[5].size}\r\n                      onClick={() => {\r\n                        setFunct(\"showFunction\");\r\n                        setModalText(sizeArray[5].fullName);\r\n                        setModalClass();\r\n                      }}\r\n                    >\r\n                      <small>{sizeArray[5].name}</small>\r\n                    </td>\r\n                  )}\r\n                  {windowWidth > 75 + summArray(7, sizeArray) && (\r\n                    <td width={sizeArray[6].size}\r\n                      onClick={() => {\r\n                        setFunct(\"showFunction\");\r\n                        setModalText(sizeArray[6].fullName);\r\n                        setModalClass();\r\n                      }}\r\n                    >\r\n                      <small>{sizeArray[6].name}</small>\r\n                    </td>\r\n                  )}\r\n                  {windowWidth > 75 + summArray(8, sizeArray) && (\r\n                    <td width={sizeArray[7].size}\r\n                      onClick={() => {\r\n                        setFunct(\"showFunction\");\r\n                        setModalText(sizeArray[7].fullName);\r\n                        setModalClass();\r\n                      }}\r\n                    >\r\n                      <small>{sizeArray[7].name}</small>\r\n                    </td>\r\n                  )}\r\n                  {windowWidth > 75 + summArray(9, sizeArray) && (\r\n                    <td width={sizeArray[8].size}\r\n                      onClick={() => {\r\n                        setFunct(\"showFunction\");\r\n                        setModalText(sizeArray[8].fullName);\r\n                        setModalClass();\r\n                      }}\r\n                    >\r\n                      <small>{sizeArray[8].name}</small>\r\n                    </td>\r\n                  )}\r\n                  {windowWidth > 75 + summArray(10, sizeArray) && (\r\n                    <td width={sizeArray[9].size}\r\n                      onClick={() => {\r\n                        setFunct(\"showFunction\");\r\n                        setModalText(sizeArray[9].fullName);\r\n                        setModalClass();\r\n                      }}\r\n                    >\r\n                      <small>{sizeArray[9].name}</small>\r\n                    </td>\r\n                  )}\r\n                  {windowWidth > 75 + summArray(11, sizeArray) && (\r\n                    <td width={sizeArray[10].size}\r\n                      onClick={() => {\r\n                        setFunct(\"showFunction\");\r\n                        setModalText(sizeArray[10].fullName);\r\n                        setModalClass();\r\n                      }}\r\n                    >\r\n                      <small>{sizeArray[10].name}</small>\r\n                    </td>\r\n                  )}\r\n                  {windowWidth > 75 + summArray(12, sizeArray) && (\r\n                    <td width={sizeArray[11].size}\r\n                      onClick={() => {\r\n                        setFunct(\"showFunction\");\r\n                        setModalText(sizeArray[11].fullName);\r\n                        setModalClass();\r\n                      }}\r\n                    >\r\n                      <small>{sizeArray[11].name}</small>\r\n                    </td>\r\n                  )}\r\n                  {windowWidth > 75 + summArray(13, sizeArray) && (\r\n                    <td width={sizeArray[12].size}\r\n                      onClick={() => {\r\n                        setFunct(\"showFunction\");\r\n                        setModalText(sizeArray[12].fullName);\r\n                        setModalClass();\r\n                      }}\r\n                    >\r\n                      <small>{sizeArray[12].name}</small>\r\n                    </td>\r\n                  )}\r\n                  {windowWidth > 75 + summArray(14, sizeArray) && (\r\n                    <td width={sizeArray[13].size}\r\n                      onClick={() => {\r\n                        setFunct(\"showFunction\");\r\n                        setModalText(sizeArray[13].fullName);\r\n                        setModalClass();\r\n                      }}\r\n                    >\r\n                      <small>{sizeArray[13].name}</small>\r\n                    </td>\r\n                  )}\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <TransitionGroup component=\"ul\" className=\"project-group\">\r\n            {newProjects.map((project) => {\r\n              let newRoutes = [];\r\n              // let newRoutes = routes.filter(\r\n              //   (route) => route.routeOwner === project.id\r\n              // );\r\n              //newRoutes.sort((a, b) => a.routNumber - b.routNumber);\r\n              //let listLiquids = NewListLiquidsCount(newRoutes);\r\n\r\n              //--PROJECTS DATA ARRAY-------------------------->\r\n              const projectDataArray = ProjectDataArray(project);\r\n              //--DYNAMIC CLASSES ----------------------------->\r\n              let projectReadinessDateClass = (moment(new Date(project.projectReadinessDate))\r\n                .format(\"YYYY-MM-DD\") >= moment(new Date())\r\n                  .format(\"YYYY-MM-DD\")) ? \"goodTime\" : \"badTime\";\r\n              let signaturуOfActClass = (project.signaturуOfAct === \"Так\") ? \"good\" : \"bad\";\r\n              let poketExistenceClass = (project.poketExistence === \"Так\") ? \"good\" : \"bad\";\r\n              let contractExistenceClass = (project.contractExistence === \"Так\") ? \"good\" : \"bad\";\r\n              return (\r\n                <CSSTransition\r\n                  key={project.id}\r\n                  classNames={\"note\"}\r\n                  timeout={800}\r\n                >\r\n                  <li\r\n                    key={project.id}\r\n                    className=\"project-group-item projectInnerLi\"\r\n                  >\r\n                    {!project.openProject && (\r\n                      <div key={project.id} className=\"projectBasis\">\r\n                        <div className=\"d-flex justify-content-between\">\r\n                          <table\r\n                            className=\"projectTable\"\r\n                            onClick={() => openCurrentProject(project)}\r\n                          >\r\n                            <tbody>\r\n                              <tr align=\"center\">\r\n                                {windowWidth > 75 + summArray(1, sizeArray) && (\r\n                                  <td width={sizeArray[0].size} className=\"head\">\r\n                                    <small className=\"projectName\"\r\n                                    >{projectDataArray[0]}</small>\r\n                                  </td>\r\n                                )}\r\n                                {windowWidth > 75 + summArray(2, sizeArray) && (\r\n                                  <td width={sizeArray[1].size}\r\n                                    className={`head ${projectReadinessDateClass}`}>\r\n                                    <small className=\"smallProjectDateBold\"\r\n                                    >{`${moment(\r\n                                      projectDataArray[1]\r\n                                    ).format(\"DD.MM.YY\")}`}</small>\r\n                                  </td>\r\n                                )}\r\n                                {windowWidth > 75 + summArray(3, sizeArray) && (\r\n                                  <td width={sizeArray[2].size}>\r\n                                    <small\r\n                                      className={contractExistenceClass}\r\n                                    >{projectDataArray[2]}</small>\r\n                                  </td>\r\n                                )}\r\n                                {windowWidth > 75 + summArray(4, sizeArray) && (\r\n                                  <td width={sizeArray[3].size}>\r\n                                    <small\r\n                                      className={signaturуOfActClass\r\n                                      }>{projectDataArray[3]}</small>\r\n                                  </td>\r\n                                )}\r\n                                {windowWidth > 75 + summArray(5, sizeArray) && (\r\n                                  <td width={sizeArray[4].size}>\r\n                                    <small\r\n                                      className={poketExistenceClass}\r\n                                    >{projectDataArray[4]}</small>\r\n                                  </td>\r\n                                )}\r\n                                {windowWidth > 75 + summArray(6, sizeArray) && (\r\n                                  <td width={sizeArray[5].size}>\r\n                                    <small>{projectDataArray[5]}</small>\r\n                                  </td>\r\n                                )}\r\n                                {windowWidth > 75 + summArray(7, sizeArray) && (\r\n                                  <td width={sizeArray[6].size}>\r\n                                    <small>{projectDataArray[6]}</small>\r\n                                  </td>\r\n                                )}\r\n                                {windowWidth > 75 + summArray(8, sizeArray) && (\r\n                                  <td width={sizeArray[7].size}>\r\n                                    <small>{projectDataArray[7]}</small>\r\n                                  </td>\r\n                                )}\r\n                                {windowWidth > 75 + summArray(9, sizeArray) && (\r\n                                  <td width={sizeArray[8].size} className=\"head\">\r\n                                    <small>{`${moment(\r\n                                      projectDataArray[8]\r\n                                    ).format(\"DD.MM.YY\")}`}</small>\r\n                                  </td>\r\n                                )}\r\n                                {windowWidth > 75 + summArray(10, sizeArray) && (\r\n                                  <td width={sizeArray[9].size}>\r\n                                    <small>{projectDataArray[9]}</small>\r\n                                  </td>\r\n                                )}\r\n                                {windowWidth >\r\n                                  75 + summArray(11, sizeArray) && (\r\n                                    <td width={sizeArray[10].size}>\r\n                                      <small>{projectDataArray[10]}</small>\r\n                                    </td>\r\n                                  )}\r\n                                {windowWidth >\r\n                                  75 + summArray(12, sizeArray) && (\r\n                                    <td width={sizeArray[11].size}>\r\n                                      <small>\r\n                                        {projectDataArray[11]}\r\n                                      </small>\r\n                                    </td>\r\n                                  )}\r\n                                {windowWidth >\r\n                                  75 + summArray(13, sizeArray) && (\r\n                                    <td width={sizeArray[12].size}>\r\n                                      <small>{projectDataArray[12]}</small>\r\n                                    </td>\r\n                                  )}\r\n                                {windowWidth >\r\n                                  75 + summArray(14, sizeArray) && (\r\n                                    <td width={sizeArray[13].size}>\r\n                                      <small>{projectDataArray[13]}</small>\r\n                                    </td>\r\n                                  )}\r\n                              </tr>\r\n                            </tbody>\r\n                          </table>\r\n                          {!project.openProject &\r\n                            !newRoutes.length &\r\n                            (userInfo.company === userInfo.jointCompany) &\r\n                            (userInfo.owner === client.owner) && (\r\n                              <button\r\n                                id=\"deleteProjectBtn\"\r\n                                type=\"button\"\r\n                                className=\"btn btn-outline-danger btn-sm deleteProjectBtn\"\r\n                                onClick={() => {\r\n                                  setId(project.id);\r\n                                  setFunct(\"removeList\");\r\n                                  setModalText(dataListWarningText);\r\n                                  setModalClass();\r\n                                }}\r\n                              >\r\n                                Х\r\n                              </button>\r\n                            )}\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                    <div>\r\n                      <div\r\n                        className=\"clouseProjectBasis\"\r\n                        onClick={() => clouseCurrentProject(project)}\r\n                      >\r\n                        {project.openProject && (\r\n                          <table className=\"clouseProjectForm\">\r\n                            <tbody>\r\n                              <tr className=\"clouseProjectTableButton\">\r\n                                <td>Закрити форму проекта</td>\r\n                              </tr>\r\n                            </tbody>\r\n                          </table>\r\n                        )}\r\n                      </div>\r\n                      {project.openProject && (\r\n                        <CreateProject\r\n                          className={openClientTableClass}\r\n                          client={client}\r\n                          project={project}\r\n                          setAlertText={setAlertText}\r\n                          setAlertClass={setAlertClass}\r\n                          newProjects={newProjects}\r\n                          userInfo={userInfo}\r\n                        />\r\n                      )}\r\n                    </div>\r\n                    {/* <RouteComponent\r\n                      car={car}\r\n                      project={project}\r\n                      setId={setId}\r\n                      newRoutes={newRoutes}\r\n                      //newCarRoutes={newCarRoutes}\r\n                      openRoute={openRoute}\r\n                      closeRoute={closeRoute}\r\n                      openNewRoute={openNewRoute}\r\n                      closeNewRoute={closeNewRoute}\r\n                      setFunct={setFunct}\r\n                      setModalClass={setModalClass}\r\n                      setModalText={setModalText}\r\n                      windowWidth={windowWidth}\r\n                      setAlertText={setAlertText}\r\n                      setAlertClass={setAlertClass}\r\n                      listLiquids={listLiquids}\r\n                      changeListRouteTime={changeListRouteTime}\r\n                      modalClass={modalClass}\r\n                      carRoutes={carRoutes}\r\n                      clouseNewList={clouseNewList}\r\n                      userInfo={userInfo}\r\n                    /> */}\r\n                  </li>\r\n                </CSSTransition>\r\n              );\r\n            })}\r\n          </TransitionGroup>\r\n          {/* <div id=\"countRoutesGroup\" className=\"d-flex justify-content-between\">\r\n            {windowWidth > 995 &&\r\n              listCarLiquids.map((liquid) => {\r\n                return (\r\n                  <pre key={liquid.name} className=\"listLiquids\">\r\n                    {\" \"}\r\n                    <small className=\"liquidValue\"> {liquid.name}</small>\r\n                    <small className=\"headStart\"> {liquid.balanceStart}</small>\r\n                  </pre>\r\n                );\r\n              })}\r\n            {windowWidth > 512 &&\r\n              listCarLiquids.map((liquid) => {\r\n                return (\r\n                  <pre key={liquid.name} className=\"listLiquids\">\r\n                    {\" \"}\r\n                    <small className=\"liquidValue\"> {liquid.name}</small>\r\n                    <small className=\"headAdd\"> {liquid.received}</small>\r\n                  </pre>\r\n                );\r\n              })}\r\n            {windowWidth > 770 &&\r\n              listCarLiquids.map((liquid) => {\r\n                return (\r\n                  <pre key={liquid.name} className=\"listLiquids\">\r\n                    {\" \"}\r\n                    <small className=\"liquidValue\"> {liquid.name}</small>\r\n                    <small className=\"headExpended\"> {liquid.expended}</small>\r\n                  </pre>\r\n                );\r\n              })}\r\n            {windowWidth > 335 &&\r\n              listCarLiquids.map((liquid) => {\r\n                return (\r\n                  <pre key={liquid.name} className=\"listLiquids\">\r\n                    {\" \"}\r\n                    <small className=\"liquidValue\"> {liquid.name}</small>\r\n                    <small className=\"headEnd\"> {liquid.balanceFinish}</small>\r\n                  </pre>\r\n                );\r\n              })}\r\n          </div> */}\r\n          <div className=\"d-flex justify-content-between projectButtonsGrup\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-outline-primary btn-sm addProjectBtn\"\r\n              onClick={() => openProject(client)}\r\n              style={{ marginRight: 4 }}\r\n            >\r\n              + Проект\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-outline-info btn-sm closeProjectBtn\"\r\n              onClick={() => clouseProject(client)}\r\n              style={{ marginRight: 4 }}\r\n            >\r\n              Закрити\r\n            </button>\r\n          </div>\r\n          {client.openProject && (\r\n            <CreateProject\r\n              client={client}\r\n              setAlertText={setAlertText}\r\n              setAlertClass={setAlertClass}\r\n              newProjects={newProjects}\r\n              userInfo={userInfo}\r\n            />\r\n          )}\r\n        </details>\r\n      </form>\r\n    );\r\n  }\r\n);\r\n","import React from \"react\";\r\nimport * as FileSaver from \"file-saver\";\r\nimport * as XLSX from \"xlsx\";\r\nimport \"../CSS/LiqCompStyle.scss\";\r\nimport { NewListLiquidsCount } from \"../mathfunctions/listFunctions\";\r\nvar moment = require(\"moment\");\r\n\r\nexport const CountStartDensity = (routes, liquid) => {\r\n  let liquidRoutes = routes.filter((route) => route.liquidName === liquid.name);\r\n  let dansitiesArray = liquidRoutes.map((route) => {\r\n    return route.density;\r\n  });\r\n  return dansitiesArray;\r\n};\r\n\r\nexport const ExportReactCSV = ({ csvData, fileName, textCSV }) => {\r\n  const fileType =\r\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n  const fileExtension = \".xlsx\";\r\n  const exportToCSV = (csvData, fileName) => {\r\n    const ws = XLSX.utils.json_to_sheet(csvData);\r\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\r\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\r\n    const data = new Blob([excelBuffer], { type: fileType });\r\n    FileSaver.saveAs(data, fileName + fileExtension);\r\n  };\r\n  return (\r\n    <button\r\n      onClick={(e) => exportToCSV(csvData, fileName)}\r\n      className=\"btn btn-success createExelBtn\"\r\n    >\r\n      <small>{textCSV}</small>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport const CommonLiquidsCount = (routes, cars) => {\r\n  let commonListLiquids = [];\r\n  let listLiquids = [];\r\n  if (!routes) {\r\n    routes = [];\r\n  }\r\n  cars.map((car) => {\r\n    let carRoutes = routes.filter((route) => route.listOwner === car.id);\r\n    let carListLiquids = NewListLiquidsCount(carRoutes);\r\n    commonListLiquids = commonListLiquids.concat(carListLiquids);\r\n    return car;\r\n  });\r\n  commonListLiquids.map((liquid) => {\r\n    let balanceStart = 0;\r\n    let received = 0;\r\n    let expended = 0;\r\n    let balanceFinish = 0;\r\n    let existLiquid = !!listLiquids.filter((liq) => liq.name === liquid.name)\r\n      .length;\r\n    if (!existLiquid) {\r\n      balanceStart =\r\n        parseInt((balanceStart + Number(liquid.balanceStart)) * 100, 10) / 100;\r\n      received = parseInt((received + Number(liquid.received)) * 100, 10) / 100;\r\n      expended = parseInt((expended + Number(liquid.expended)) * 100, 10) / 100;\r\n      balanceFinish =\r\n        parseInt((balanceFinish + Number(liquid.balanceFinish)) * 100, 10) /\r\n        100;\r\n      let Liquid = {\r\n        name: liquid.name,\r\n        balanceStart: balanceStart,\r\n        received: received,\r\n        expended: expended,\r\n        balanceFinish: balanceFinish,\r\n      };\r\n      listLiquids = listLiquids.concat([Liquid]);\r\n    } else {\r\n      let modifyLiquid = listLiquids\r\n        .filter((liq) => liq.name === liquid.name)\r\n        .shift();\r\n      let modifyLiquidList = listLiquids.filter(\r\n        (liq) => liq.name !== liquid.name\r\n      );\r\n      balanceStart =\r\n        parseInt(\r\n          (Number(modifyLiquid.balanceStart) + Number(liquid.balanceStart)) *\r\n            100,\r\n          10\r\n        ) / 100;\r\n      received =\r\n        parseInt(\r\n          (Number(modifyLiquid.received) + Number(liquid.received)) * 100,\r\n          10\r\n        ) / 100;\r\n      expended =\r\n        parseInt(\r\n          (Number(modifyLiquid.expended) + Number(liquid.expended)) * 100,\r\n          10\r\n        ) / 100;\r\n      balanceFinish =\r\n        parseInt(\r\n          (Number(modifyLiquid.balanceFinish) + Number(liquid.balanceFinish)) *\r\n            100,\r\n          10\r\n        ) / 100;\r\n      let Liquid = {\r\n        name: liquid.name,\r\n        balanceStart: balanceStart,\r\n        received: received,\r\n        expended: expended,\r\n        balanceFinish: balanceFinish,\r\n      };\r\n      listLiquids = modifyLiquidList.concat([Liquid]);\r\n    }\r\n    return liquid;\r\n  });\r\n  listLiquids.sort((a, b) => a.name - b.name);\r\n  return listLiquids;\r\n};\r\n\r\nexport const carLiquidsExelInfo = (cars, lists, routes) => {\r\n  let newCarLiquidsInfo = [];\r\n  cars.map((car) => {\r\n    let newLists = lists.filter((list) => list.listOwner === car.id);\r\n    newLists.sort((a, b) => a.listNumber - b.listNumber);\r\n    let carRoutes = routes.filter((route) => route.listOwner === car.id);\r\n    let listCarLiquids = NewListLiquidsCount(carRoutes);\r\n    let newCarLiquidNull = {\r\n      Найменування: car.typeOfCar,\r\n      Номер: car.governmentCarNumber,\r\n      \"Тип ПММ\": \"---\",\r\n      Було: \"---\",\r\n      Отримано: \"---\",\r\n      Витрачено: \"---\",\r\n      Залишок: \"---\",\r\n    };\r\n    newCarLiquidsInfo = newCarLiquidsInfo.concat(newCarLiquidNull);\r\n    let newCarLiquid = {};\r\n    listCarLiquids.map((liq) => {\r\n      newCarLiquid = {\r\n        Найменування: \"\",\r\n        Номер: \"\",\r\n        \"Тип ПММ\": liq.name,\r\n        Було: liq.balanceStart,\r\n        Отримано: liq.received,\r\n        Витрачено: liq.expended,\r\n        Залишок: liq.balanceFinish,\r\n      };\r\n      newCarLiquidsInfo = newCarLiquidsInfo.concat(newCarLiquid);\r\n      return liq;\r\n    });\r\n    return car;\r\n  });\r\n  return newCarLiquidsInfo;\r\n};\r\n\r\nexport const carListLiquidsExelInfo = (cars, lists, routes) => {\r\n  let newCarListLiquidsInfo = [];\r\n  cars.map((car) => {\r\n    let newLists = lists.filter((list) => list.listOwner === car.id);\r\n    newLists.sort((a, b) => a.listNumber - b.listNumber);\r\n    let newCarListLiquidNull_Car = {\r\n      Номер: car.governmentCarNumber,\r\n      \"Лист №\": \"---\",\r\n      \"Тип ПММ\": \"---\",\r\n      Було: \"---\",\r\n      Отримано: \"---\",\r\n      Витрачено: \"---\",\r\n      Залишок: \"---\",\r\n    };\r\n    newCarListLiquidsInfo = newCarListLiquidsInfo.concat(\r\n      newCarListLiquidNull_Car\r\n    );\r\n    newLists.map((list) => {\r\n      let newCarListLiquidNull_List = {\r\n        Номер: \"---\",\r\n        \"Лист №\": list.listNumber,\r\n        \"Тип ПММ\": \"---\",\r\n        Було: \"---\",\r\n        Отримано: \"---\",\r\n        Витрачено: \"---\",\r\n        Залишок: \"---\",\r\n      };\r\n      newCarListLiquidsInfo = newCarListLiquidsInfo.concat(\r\n        newCarListLiquidNull_List\r\n      );\r\n      let listRoutes = routes.filter((route) => route.routeOwner === list.id);\r\n      let listListLiquids = NewListLiquidsCount(listRoutes);\r\n      let newCarListLiquid = {};\r\n      listListLiquids.map((liq) => {\r\n        newCarListLiquid = {\r\n          Номер: \"---\",\r\n          \"Лист №\": \"---\",\r\n          \"Тип ПММ\": liq.name,\r\n          Було: liq.balanceStart,\r\n          Отримано: liq.received,\r\n          Витрачено: liq.expended,\r\n          Залишок: liq.balanceFinish,\r\n        };\r\n        newCarListLiquidsInfo = newCarListLiquidsInfo.concat(newCarListLiquid);\r\n        return liq;\r\n      });\r\n      return list;\r\n    });\r\n    return car;\r\n  });\r\n  return newCarListLiquidsInfo;\r\n};\r\n\r\nexport const carExelInfo = (cars) => {\r\n  let commonCarsInfo = [];\r\n  cars.map((car) => {\r\n    let TO2 =\r\n      parseInt(\r\n        (Number(car.carIndicatorLastTO2) + Number(car.routeToTO2)) * 100,\r\n        10\r\n      ) / 100;\r\n    let routeToTO2 =\r\n      parseInt(\r\n        (Number(car.carIndicatorLastTO2) +\r\n          Number(car.routeToTO2) -\r\n          Number(car.carIndicatorLast)) *\r\n          100,\r\n        10\r\n      ) / 100;\r\n    let TO1 =\r\n      parseInt(\r\n        (Number(car.carIndicatorLastTO1) + Number(car.routeToTO1)) * 100,\r\n        10\r\n      ) / 100;\r\n    let routeToTO1 =\r\n      parseInt(\r\n        (Number(car.carIndicatorLastTO1) +\r\n          Number(car.routeToTO1) -\r\n          Number(car.carIndicatorLast)) *\r\n          100,\r\n        10\r\n      ) / 100;\r\n    let КР =\r\n      parseInt(\r\n        (Number(car.carIndicatorLastКР) + Number(car.routeToКР)) * 100,\r\n        10\r\n      ) / 100;\r\n    let routeToКР =\r\n      parseInt(\r\n        (Number(car.carIndicatorLastКР) +\r\n          Number(car.routeToКР) -\r\n          Number(car.carIndicatorLast)) *\r\n          100,\r\n        10\r\n      ) / 100;\r\n    let СР =\r\n      parseInt(\r\n        (Number(car.carIndicatorLastСР) + Number(car.routeToСР)) * 100,\r\n        10\r\n      ) / 100;\r\n    let routeToСР =\r\n      parseInt(\r\n        (Number(car.carIndicatorLastСР) +\r\n          Number(car.routeToСР) -\r\n          Number(car.carIndicatorLast)) *\r\n          100,\r\n        10\r\n      ) / 100;\r\n    commonCarsInfo = commonCarsInfo.concat({\r\n      \"Найменув.\": car.typeOfCar,\r\n      Номер: car.governmentCarNumber,\r\n      Пробіг: car.carIndicatorLast,\r\n      Км: car.totalCarMileage,\r\n      \"Напрац.\": car.carTimeFinish,\r\n      Год: car.carTimeTotal,\r\n      \"На дату\": moment(car.dateOfRegistration).format(\"DD.MM HH:mm\"),\r\n      \"№ двиг.\": car.carEngineNumber,\r\n      \"№ шасі\": car.factoryCarNumber,\r\n      \"№ пасп.\": car.factoryCarNumber,\r\n      \"Обладн.\": car.specialCarEquipment,\r\n      \"№ обл.\": car.specialCarEquipmentNumber,\r\n      Власник: car.carOwnerName,\r\n      Вироблено: car.dateOfCarProduction,\r\n      Група: car.operatingGroup,\r\n      Категорія: car.category,\r\n      TO1: TO1,\r\n      \"До ТО1\": routeToTO1,\r\n      TO2: TO2,\r\n      \"До ТО2\": routeToTO2,\r\n      СР: СР,\r\n      \"До СР\": routeToСР,\r\n      КР: КР,\r\n      \"До КР\": routeToКР,\r\n      Стан: car.serviceabilityreason,\r\n    });\r\n    return car;\r\n  });\r\n  return commonCarsInfo;\r\n};\r\n\r\nexport const agrExelInfo = (cars) => {\r\n  let commonCarsInfo = [];\r\n  cars.map((car) => {\r\n    let timeTO2 =\r\n      parseInt(\r\n        (Number(car.carTimeLastTO2) + Number(car.nextTimeTO2)) * 100,\r\n        10\r\n      ) / 100;\r\n    let timeToTO2 =\r\n      parseInt(\r\n        (Number(car.carTimeLastTO2) +\r\n          Number(car.nextTimeTO2) -\r\n          Number(car.carTimeFinish)) *\r\n          100,\r\n        10\r\n      ) / 100;\r\n    let timeTO1 =\r\n      parseInt(\r\n        (Number(car.carTimeLastTO1) + Number(car.nextTimeTO1)) * 100,\r\n        10\r\n      ) / 100;\r\n    let timeToTO1 =\r\n      parseInt(\r\n        (Number(car.carTimeLastTO1) +\r\n          Number(car.nextTimeTO1) -\r\n          Number(car.carTimeFinish)) *\r\n          100,\r\n        10\r\n      ) / 100;\r\n    let timeКР =\r\n      parseInt((Number(car.carTimeLastКР) + Number(car.nextTimeКР)) * 100, 10) /\r\n      100;\r\n    let timeToКР =\r\n      parseInt(\r\n        (Number(car.carTimeLastКР) +\r\n          Number(car.nextTimeКР) -\r\n          Number(car.carTimeFinish)) *\r\n          100,\r\n        10\r\n      ) / 100;\r\n    let timeСР =\r\n      parseInt((Number(car.carTimeLastСР) + Number(car.nextTimeСР)) * 100, 10) /\r\n      100;\r\n    let timeToСР =\r\n      parseInt(\r\n        (Number(car.carTimeLastСР) +\r\n          Number(car.nextTimeСР) -\r\n          Number(car.carTimeFinish)) *\r\n          100,\r\n        10\r\n      ) / 100;\r\n    commonCarsInfo = commonCarsInfo.concat({\r\n      \"Найменув.\": car.typeOfCar,\r\n      Номер: car.governmentCarNumber,\r\n      Пробіг: car.carIndicatorLast,\r\n      Км: car.totalCarMileage,\r\n      \"Напрац.\": car.carTimeFinish,\r\n      Год: car.carTimeTotal,\r\n      \"На дату\": moment(car.dateOfRegistration).format(\"DD.MM HH:mm\"),\r\n      \"№ двиг.\": car.carEngineNumber,\r\n      \"№ шасі\": car.factoryCarNumber,\r\n      \"№ пасп.\": car.factoryCarNumber,\r\n      \"Обладн.\": car.specialCarEquipment,\r\n      \"№ обл.\": car.specialCarEquipmentNumber,\r\n      Власник: car.carOwnerName,\r\n      Вироблено: car.dateOfCarProduction,\r\n      Група: car.operatingGroup,\r\n      Категорія: car.category,\r\n      \"Час ТО1\": timeTO1,\r\n      \"Час до ТО1\": timeToTO1,\r\n      \"Час ТО2\": timeTO2,\r\n      \"Час до ТО2\": timeToTO2,\r\n      \"Час СР\": timeСР,\r\n      \"Час до СР\": timeToСР,\r\n      \"Час КР\": timeКР,\r\n      \"Час до КР\": timeToКР,\r\n      Стан: car.serviceabilityreason,\r\n    });\r\n    return car;\r\n  });\r\n  return commonCarsInfo;\r\n};\r\n\r\nexport const agrCarExelInfo = (cars) => {\r\n  let commonCarsInfo = [];\r\n  cars.map((car) => {\r\n    let TO2 =\r\n      parseInt(\r\n        (Number(car.carIndicatorLastTO2) + Number(car.routeToTO2)) * 100,\r\n        10\r\n      ) / 100;\r\n    let routeToTO2 =\r\n      parseInt(\r\n        (Number(car.carIndicatorLastTO2) +\r\n          Number(car.routeToTO2) -\r\n          Number(car.carIndicatorLast)) *\r\n          100,\r\n        10\r\n      ) / 100;\r\n    let TO1 =\r\n      parseInt(\r\n        (Number(car.carIndicatorLastTO1) + Number(car.routeToTO1)) * 100,\r\n        10\r\n      ) / 100;\r\n    let routeToTO1 =\r\n      parseInt(\r\n        (Number(car.carIndicatorLastTO1) +\r\n          Number(car.routeToTO1) -\r\n          Number(car.carIndicatorLast)) *\r\n          100,\r\n        10\r\n      ) / 100;\r\n    let timeTO2 =\r\n      parseInt(\r\n        (Number(car.carTimeLastTO2) + Number(car.nextTimeTO2)) * 100,\r\n        10\r\n      ) / 100;\r\n    let timeToTO2 =\r\n      parseInt(\r\n        (Number(car.carTimeLastTO2) +\r\n          Number(car.nextTimeTO2) -\r\n          Number(car.carTimeFinish)) *\r\n          100,\r\n        10\r\n      ) / 100;\r\n    let timeTO1 =\r\n      parseInt(\r\n        (Number(car.carTimeLastTO1) + Number(car.nextTimeTO1)) * 100,\r\n        10\r\n      ) / 100;\r\n    let timeToTO1 =\r\n      parseInt(\r\n        (Number(car.carTimeLastTO1) +\r\n          Number(car.nextTimeTO1) -\r\n          Number(car.carTimeFinish)) *\r\n          100,\r\n        10\r\n      ) / 100;\r\n    let КР =\r\n      parseInt(\r\n        (Number(car.carIndicatorLastКР) + Number(car.routeToКР)) * 100,\r\n        10\r\n      ) / 100;\r\n    let routeToКР =\r\n      parseInt(\r\n        (Number(car.carIndicatorLastКР) +\r\n          Number(car.routeToКР) -\r\n          Number(car.carIndicatorLast)) *\r\n          100,\r\n        10\r\n      ) / 100;\r\n    let СР =\r\n      parseInt(\r\n        (Number(car.carIndicatorLastСР) + Number(car.routeToСР)) * 100,\r\n        10\r\n      ) / 100;\r\n    let routeToСР =\r\n      parseInt(\r\n        (Number(car.carIndicatorLastСР) +\r\n          Number(car.routeToСР) -\r\n          Number(car.carIndicatorLast)) *\r\n          100,\r\n        10\r\n      ) / 100;\r\n    let timeКР =\r\n      parseInt((Number(car.carTimeLastКР) + Number(car.nextTimeКР)) * 100, 10) /\r\n      100;\r\n    let timeToКР =\r\n      parseInt(\r\n        (Number(car.carTimeLastКР) +\r\n          Number(car.nextTimeКР) -\r\n          Number(car.carTimeFinish)) *\r\n          100,\r\n        10\r\n      ) / 100;\r\n    let timeСР =\r\n      parseInt((Number(car.carTimeLastСР) + Number(car.nextTimeСР)) * 100, 10) /\r\n      100;\r\n    let timeToСР =\r\n      parseInt(\r\n        (Number(car.carTimeLastСР) +\r\n          Number(car.nextTimeСР) -\r\n          Number(car.carTimeFinish)) *\r\n          100,\r\n        10\r\n      ) / 100;\r\n    commonCarsInfo = commonCarsInfo.concat({\r\n      \"Найменув.\": car.typeOfCar,\r\n      Номер: car.governmentCarNumber,\r\n      Пробіг: car.carIndicatorLast,\r\n      Км: car.totalCarMileage,\r\n      \"Напрац.\": car.carTimeFinish,\r\n      Год: car.carTimeTotal,\r\n      \"На дату\": moment(car.dateOfRegistration).format(\"DD.MM HH:mm\"),\r\n      \"№ двиг.\": car.carEngineNumber,\r\n      \"№ шасі\": car.factoryCarNumber,\r\n      \"№ пасп.\": car.factoryCarNumber,\r\n      \"Обладн.\": car.specialCarEquipment,\r\n      \"№ обл.\": car.specialCarEquipmentNumber,\r\n      Власник: car.carOwnerName,\r\n      Вироблено: car.dateOfCarProduction,\r\n      Група: car.operatingGroup,\r\n      Категорія: car.category,\r\n      TO1: TO1,\r\n      \"До ТО1\": routeToTO1,\r\n      TO2: TO2,\r\n      \"До ТО2\": routeToTO2,\r\n      СР: СР,\r\n      \"До СР\": routeToСР,\r\n      КР: КР,\r\n      \"До КР\": routeToКР,\r\n      \"Час ТО1\": timeTO1,\r\n      \"Час до ТО1\": timeToTO1,\r\n      \"Час ТО2\": timeTO2,\r\n      \"Час до ТО2\": timeToTO2,\r\n      \"Час СР\": timeСР,\r\n      \"Час до СР\": timeToСР,\r\n      \"Час КР\": timeКР,\r\n      \"Час до КР\": timeToКР,\r\n      Стан: car.serviceabilityreason,\r\n    });\r\n    return car;\r\n  });\r\n  return commonCarsInfo;\r\n};\r\n\r\nexport const instExelInfo = (cars) => {\r\n  let commonCarsInfo = [];\r\n  cars.map((car) => {\r\n    let timeTO2 =\r\n      parseInt(\r\n        (Number(car.carTimeLastTO2) + Number(car.nextTimeTO2)) * 100,\r\n        10\r\n      ) / 100;\r\n    let timeToTO2 =\r\n      parseInt(\r\n        (Number(car.carTimeLastTO2) +\r\n          Number(car.nextTimeTO2) -\r\n          Number(car.carTimeFinish)) *\r\n          100,\r\n        10\r\n      ) / 100;\r\n    let timeTO1 =\r\n      parseInt(\r\n        (Number(car.carTimeLastTO1) + Number(car.nextTimeTO1)) * 100,\r\n        10\r\n      ) / 100;\r\n    let timeToTO1 =\r\n      parseInt(\r\n        (Number(car.carTimeLastTO1) +\r\n          Number(car.nextTimeTO1) -\r\n          Number(car.carTimeFinish)) *\r\n          100,\r\n        10\r\n      ) / 100;\r\n    let timeКР =\r\n      parseInt((Number(car.carTimeLastКР) + Number(car.nextTimeКР)) * 100, 10) /\r\n      100;\r\n    let timeToКР =\r\n      parseInt(\r\n        (Number(car.carTimeLastКР) +\r\n          Number(car.nextTimeКР) -\r\n          Number(car.carTimeFinish)) *\r\n          100,\r\n        10\r\n      ) / 100;\r\n    let timeСР =\r\n      parseInt((Number(car.carTimeLastСР) + Number(car.nextTimeСР)) * 100, 10) /\r\n      100;\r\n    let timeToСР =\r\n      parseInt(\r\n        (Number(car.carTimeLastСР) +\r\n          Number(car.nextTimeСР) -\r\n          Number(car.carTimeFinish)) *\r\n          100,\r\n        10\r\n      ) / 100;\r\n    commonCarsInfo = commonCarsInfo.concat({\r\n      \"Найменув.\": car.typeOfCar,\r\n      Номер: car.governmentCarNumber,\r\n      Пробіг: car.carIndicatorLast,\r\n      Км: car.totalCarMileage,\r\n      \"Напрац.\": car.carTimeFinish,\r\n      Год: car.carTimeTotal,\r\n      \"На дату\": moment(car.dateOfRegistration).format(\"DD.MM HH:mm\"),\r\n      \"№ двиг.\": car.carEngineNumber,\r\n      \"№ шасі\": car.factoryCarNumber,\r\n      \"№ пасп.\": car.factoryCarNumber,\r\n      \"Обладн.\": car.specialCarEquipment,\r\n      \"№ обл.\": car.specialCarEquipmentNumber,\r\n      Власник: car.carOwnerName,\r\n      Вироблено: car.dateOfCarProduction,\r\n      Група: car.operatingGroup,\r\n      Категорія: car.category,\r\n      \"Час ТО1\": timeTO1,\r\n      \"Час до ТО1\": timeToTO1,\r\n      \"Час ТО2\": timeTO2,\r\n      \"Час до ТО2\": timeToTO2,\r\n      \"Час СР\": timeСР,\r\n      \"Час до СР\": timeToСР,\r\n      \"Час КР\": timeКР,\r\n      \"Час до КР\": timeToКР,\r\n      Стан: car.serviceabilityreason,\r\n    });\r\n    return car;\r\n  });\r\n  return commonCarsInfo;\r\n};\r\n\r\nexport const instTimeExelInfo = (cars, lists, routes) => {\r\n  let newCarListTimesInfo = [];\r\n  cars.map((car) => {\r\n    let newLists = lists.filter((list) => list.listOwner === car.id);\r\n    newLists.sort((a, b) => a.listNumber - b.listNumber);\r\n    let newCarListLiquidNull_Car = {\r\n      Назва: car.typeOfCar,\r\n      Номер: car.governmentCarNumber,\r\n      \"Лист №\": \"---\",\r\n      Годин: \"---\",\r\n      \"Час початку\": \"---\",\r\n      \"Час закінчення\": \"---\",\r\n      Мета: \"---\",\r\n      Зауваження: \"---\",\r\n    };\r\n    newCarListTimesInfo = newCarListTimesInfo.concat(newCarListLiquidNull_Car);\r\n    newLists.map((list) => {\r\n      let newCarListLiquidNull_List = {\r\n        Назва: \"---\",\r\n        Номер: \"---\",\r\n        \"Лист №\": list.listNumber,\r\n        Годин: \"---\",\r\n        \"Час початку\": \"---\",\r\n        \"Час закінчення\": \"---\",\r\n        Мета: \"---\",\r\n        Зауваження: \"---\",\r\n      };\r\n      newCarListTimesInfo = newCarListTimesInfo.concat(\r\n        newCarListLiquidNull_List\r\n      );\r\n      let listRoutes = routes.filter((route) => route.routeOwner === list.id);\r\n      let newCarListLiquid = {};\r\n      listRoutes.map((route) => {\r\n        newCarListLiquid = {\r\n          Номер: \"---\",\r\n          \"Лист №\": \"---\",\r\n          Годин: route.routTotalTime,\r\n          \"Час початку\": moment(route.routDate).format(\"DD.MM HH:mm\"),\r\n          \"Час закінчення\": moment(route.routArrival).format(\"DD.MM HH:mm\"),\r\n          Мета: route.cargoName,\r\n          Зауваження: route.routeTo,\r\n        };\r\n        newCarListTimesInfo = newCarListTimesInfo.concat(newCarListLiquid);\r\n        return route;\r\n      });\r\n      return list;\r\n    });\r\n    return car;\r\n  });\r\n  return newCarListTimesInfo;\r\n};\r\n","import React, { memo, useState } from \"react\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport // ExportReactCSV,\r\n//carExelInfo,\r\n//carLiquidsExelInfo,\r\n//carListLiquidsExelInfo,\r\n\"../mathfunctions/liquidsFunctions\";\r\nimport { CreateComponent } from \"./CreateComponent\";\r\nimport { ModalBox } from \"./ModalBox\";\r\nimport { AlertBox } from \"./AlertBox\";\r\nimport { ShowBox } from \"./ShowBox\";\r\nimport fire from \"../config/Fire\";\r\nimport { ProjectsComponent } from \"./ProjectsComponent\";\r\nvar moment = require(\"moment\");\r\n\r\nexport const PersonsComp = memo(\r\n  ({\r\n    //---COMMON DATES ----------------------->\r\n    windowWidth,\r\n    clientType,\r\n    //---COMMON STATE ----------------------->\r\n    dates,\r\n    userInfos,\r\n    clients,\r\n    projects,\r\n    //---CLIENT FUNCTIONS ------------------->\r\n    removeClient,\r\n    openClient,\r\n    clouseClient,\r\n    //---PROJECTS FUNCTIONS ----------------->\r\n    addProject,\r\n    openProject,\r\n    clouseProject,\r\n    removeProject,\r\n    openCurrentProject,\r\n    clouseCurrentProject,\r\n\r\n    //routes,\r\n    // openNewList,\r\n    // clouseNewList,\r\n    // openNewRoute,\r\n    // closeNewRoute,\r\n    // openList,\r\n    // closeList,\r\n    // openRoute,\r\n    // closeRoute,\r\n  }) => {\r\n    //---Alert functions block---------------->\r\n    const dataWarningText =\r\n      \"Ви намагаєтеся видалити дані! Після видалення відновлення даних буде не можливим!\";\r\n    let [alertClass, setAlertClass] = useState(\"modal\");\r\n    let [alertText, setAlertText] = useState(\"\");\r\n    let [modalClass, setClass] = useState(\"modal\");\r\n    let [fun, setFunct] = useState(\"\");\r\n    let [textModal, setModalText] = useState();\r\n    let [Id, setId] = useState();\r\n    let setModalClass = () => {\r\n      if ((modalClass = \"modal\")) {\r\n        setClass(\"open\");\r\n      } else {\r\n        setClass(\"modal\");\r\n      }\r\n    };\r\n    //--Create user data----------------------->\r\n    var owner = fire.auth.currentUser.uid;\r\n    let userInfo = userInfos.find((info) => info.owner === owner);\r\n    if (!userInfo) {\r\n      return null;\r\n    }\r\n    let userInUse = userInfos.find(\r\n      (infoUse) => infoUse.company === userInfo.jointCompany\r\n    );\r\n    if (!userInUse) {\r\n      return null;\r\n    }\r\n    //--Create clients data array--------------->\r\n    clients = clients.filter((client) => client.owner === userInUse.owner);\r\n    clients = clients.filter((client) => client.clientType === clientType);\r\n    clients.sort(\r\n      (a, b) => new Date(b.registrationDate) - new Date(a.registrationDate)\r\n    );\r\n    let clientsExists = clients.length;\r\n    if (clientsExists === 0) {\r\n      return null;\r\n    }\r\n    //---------------------------------Cars JSX block----------------------------------//\r\n    return (\r\n      <div>\r\n        <div>\r\n          <TransitionGroup component=\"ul\" className=\"list-group\">\r\n            {clientsExists &&\r\n              clients.map((client) => {\r\n                //--------------------Create client projects and routes-----------------------//\r\n                let newProjects = projects.filter(\r\n                  (project) => project.projectOwner === client.id\r\n                );\r\n                newProjects.sort((a, b) => a.projectNumber - b.projectNumber);\r\n                // let carRoutes = routes.filter(\r\n                //   (route) => route.listOwner === client.id\r\n                // );\r\n                // //---------------------------Car liquids array---------------------------//\r\n                // let listCarLiquids = NewListLiquidsCount(carRoutes);\r\n\r\n                //--CLIENT TYPE DYNAMIC CLASSIS ----------->\r\n                let clientType = null;\r\n                if (client.clientType === \"Юрідичний\") {\r\n                  clientType = \"legalClients\";\r\n                } else {\r\n                  clientType = \"unlegalClients\";\r\n                }\r\n                //--DYNAMIC CLASSIS---------------------->\r\n                //--TABLE----->\r\n                let openClientTableClass = null;\r\n                if (client.openClient) {\r\n                  openClientTableClass = \"tableItemsAreClouse\";\r\n                }\r\n                //--DELETE BUTTON -->\r\n                let openDeleteButtonClass = null;\r\n                if (client.openClient) {\r\n                  openDeleteButtonClass = \"deleteButtonItemAreClouse\";\r\n                }\r\n                if (newProjects.length) {\r\n                  openDeleteButtonClass = \"deleteButtonItemAreClouse\";\r\n                }\r\n                if (userInfo.company !== userInfo.jointCompany) {\r\n                  openDeleteButtonClass = \"deleteButtonItemAreClouse\";\r\n                }\r\n                //--DISABLE BUTTON--->\r\n                let disableDeleteButtonClass = \"deleteButtonItemAreClouse\";\r\n                if (newProjects.length) {\r\n                  disableDeleteButtonClass = \"\";\r\n                }\r\n                if (userInfo.company !== userInfo.jointCompany) {\r\n                  disableDeleteButtonClass = \"\";\r\n                }\r\n                if (client.openClient) {\r\n                  disableDeleteButtonClass = \"deleteButtonItemAreClouse\";\r\n                }\r\n                //----TABLE SIZE FUNCTION---------------->\r\n                const sizeArray = [\r\n                  180,\r\n                  105,\r\n                  80,\r\n                  120,\r\n                  90,\r\n                  80,\r\n                  40,\r\n                  80,\r\n                  300,\r\n                  70,\r\n                  90,\r\n                  90\r\n                ];\r\n                const summArray = (numb, sizeArray) => {\r\n                  let i = 0;\r\n                  let summ = 0;\r\n                  while (i < numb) {\r\n                    summ = summ + sizeArray[i];\r\n                    i++;\r\n                  }\r\n                  return summ;\r\n                };\r\n                //---------------------------CLIENTS RENDER----------------------------//\r\n                return (\r\n                  <CSSTransition\r\n                    key={client.id}\r\n                    classNames={\"note\"}\r\n                    timeout={800}\r\n                  >\r\n                    <li\r\n                      key={client.id}\r\n                      className=\"list-group-item clientInnerLi\"\r\n                    >\r\n                      <form className=\"d-flex justify-content-between clientInnerForm\">\r\n                        <table\r\n                          className={`clientTable ${openClientTableClass}`}\r\n                          onClick={() => {\r\n                            openClient(client);\r\n                          }}\r\n                        >\r\n                          <tbody>\r\n                            <tr align=\"center\">\r\n                            {windowWidth > 70 + summArray(1, sizeArray) && (\r\n                              <td width={sizeArray[0]}>\r\n                                <small className={clientType}>\r\n                                  {client.companyName}\r\n                                </small>\r\n                              </td>\r\n                            )}\r\n                               {windowWidth > 70 + summArray(2, sizeArray) && (\r\n                                <td width={sizeArray[1]}>\r\n                                  <small>{client.secName}</small>\r\n                                </td>\r\n                              )}\r\n                              {windowWidth > 70 + summArray(3, sizeArray) && (\r\n                                <td width={sizeArray[2]}>\r\n                                  <small>{client.firstName}</small>\r\n                                </td>\r\n                              )}\r\n                              {windowWidth > 70 + summArray(4, sizeArray) && (\r\n                                <td width={sizeArray[3]}>\r\n                                  <small>{client.thirdName}</small>\r\n                                </td>\r\n                              )}\r\n                              {windowWidth > 70 + summArray(5, sizeArray) && (\r\n                                <td width={sizeArray[4]}>\r\n                                  <small>{client.phonNumber}</small>\r\n                                </td>\r\n                              )}\r\n                              {windowWidth > 70 + summArray(6, sizeArray) && (\r\n                                <td width={sizeArray[5]}>\r\n                                  <small>{client.contractNumber}</small>\r\n                                </td>\r\n                              )}\r\n                              {windowWidth > 70 + summArray(7, sizeArray) && (\r\n                                <td width={sizeArray[6]}>\r\n                                  <small>{client.contractPeriod}</small>\r\n                                </td>\r\n                              )}\r\n                              {windowWidth > 70 + summArray(8, sizeArray) && (\r\n                                <td width={sizeArray[7]}>\r\n                                  <small>\r\n                                    {`${moment(client.registrationDate).format(\r\n                                      \"DD.MM HH:mm\"\r\n                                    )}`}\r\n                                  </small>\r\n                                </td>\r\n                              )}\r\n                              {windowWidth > 70 + summArray(9, sizeArray) && (\r\n                                <td width={sizeArray[8]}>\r\n                                  <small>{client.adress}</small>\r\n                                </td>\r\n                              )}\r\n                              {windowWidth > 70 + summArray(10, sizeArray) && (\r\n                                <td width={sizeArray[9]}>\r\n                                  <small>{client.incomingSourse}</small>\r\n                                </td>\r\n                              )}\r\n                              {windowWidth > 70 + summArray(11, sizeArray) && (\r\n                                <td width={sizeArray[10]}>\r\n                                  <small>{client.dateOfSignContract}</small>\r\n                                </td>\r\n                              )}\r\n                              {windowWidth > 70 + summArray(12, sizeArray) && (\r\n                                <td width={sizeArray[11]}>\r\n                                  <small className=\"negotiationsResult\">\r\n                                    {client.negotiationsResult}\r\n                                  </small>\r\n                                </td>\r\n                              )}\r\n                              {/* {windowWidth > 1201 && (\r\n                                    <td width=\"90\">\r\n                                      <small className={clientType}>ТО1: </small>\r\n                                      <small className={typeRouteTO1}>\r\n                                        {TO1}\r\n                                      </small>\r\n                                    </td>\r\n                                  )}\r\n                                */}\r\n                            </tr>\r\n                          </tbody>\r\n                        </table>\r\n                        <div>\r\n                          <button\r\n                            type=\"button\"\r\n                            className={`btn btn-outline-danger btn-sm deleteCarBtn ${openDeleteButtonClass}`}\r\n                            onClick={() => {\r\n                              setId(client.id);\r\n                              setFunct(\"removeCar\");\r\n                              setModalText(dataWarningText);\r\n                              setModalClass();\r\n                            }}\r\n                          >\r\n                            &times;\r\n                          </button>\r\n                          <button\r\n                            type=\"button\"\r\n                            className={`btn btn-outline-secondary btn-sm deleteCarBtn ${disableDeleteButtonClass}`}\r\n                            disabled\r\n                          >\r\n                            &times;\r\n                          </button>\r\n                          {client.openClient && (\r\n                            <table\r\n                              className=\"clientTable\"\r\n                              onClick={() => {\r\n                                clouseClient(client);\r\n                              }}\r\n                            >\r\n                              <tbody>\r\n                                <tr align=\"center\">\r\n                                  <td width=\"200\">\r\n                                    <small className={clientType}>\r\n                                      For close\r\n                                    </small>\r\n                                    {/* <small className={typeRouteКР}>{КР}</small> */}\r\n                                  </td>\r\n                                  {windowWidth > 247 && (\r\n                                    <td width=\"100\" className={clientType}>\r\n                                      <small>Info</small>\r\n                                    </td>\r\n                                  )}\r\n                                  {windowWidth > 247 && (\r\n                                    <td width=\"100\" className={clientType}>\r\n                                      <small>Info</small>\r\n                                    </td>\r\n                                  )}\r\n                                  {windowWidth > 247 && (\r\n                                    <td width=\"100\" className={clientType}>\r\n                                      <small>Info</small>\r\n                                    </td>\r\n                                  )}\r\n                                  {windowWidth > 247 && (\r\n                                    <td width=\"100\" className={clientType}>\r\n                                      <small>Info</small>\r\n                                    </td>\r\n                                  )}\r\n                                  {windowWidth > 247 && (\r\n                                    <td width=\"100\" className={clientType}>\r\n                                      <small>Info</small>\r\n                                    </td>\r\n                                  )}\r\n                                </tr>\r\n                              </tbody>\r\n                            </table>\r\n                          )}\r\n                          {client.openClient && (\r\n                            <CreateComponent\r\n                              client={client}\r\n                              clients={clients}\r\n                              userInfo={userInfo}\r\n                            />\r\n                          )}\r\n                        </div>\r\n                      </form>\r\n                      <form className=\"addingObjTable\"></form>\r\n                      {!client.openClient && (\r\n                        <ProjectsComponent\r\n                          client={client}\r\n                          dates={dates}\r\n                          //routes={routes}\r\n                          newProjects={newProjects}\r\n                          //openNewRoute={openNewRoute}\r\n                          //closeNewRoute={closeNewRoute}\r\n                          addProject={addProject}\r\n                          openProject={openProject}\r\n                          clouseProject={clouseProject}\r\n                          removeProject={removeProject}\r\n                          openCurrentProject={openCurrentProject}\r\n                          clouseCurrentProject={clouseCurrentProject}\r\n                          //openRoute={openRoute}\r\n                          //closeRoute={closeRoute}\r\n                          windowWidth={windowWidth}\r\n                          setAlertClass={setAlertClass}\r\n                          setAlertText={setAlertText}\r\n                          setFunct={setFunct}\r\n                          setModalText={setModalText}\r\n                          setModalClass={setModalClass}\r\n                          setId={setId}\r\n                          modalClass={modalClass}\r\n                          //carRoutes={carRoutes}\r\n                          //listCarLiquids={listCarLiquids}\r\n                          userInfo={userInfo}\r\n                        />\r\n                      )}\r\n                    </li>\r\n                  </CSSTransition>\r\n                );\r\n              })}\r\n            {fun === \"removeCar\" && (\r\n              <ModalBox\r\n                modalClass={modalClass}\r\n                modalText={textModal}\r\n                modalFunction={setClass}\r\n                Id={Id}\r\n                innerFunction={removeClient}\r\n              />\r\n            )}\r\n            {fun === \"removeList\" && (\r\n              <ModalBox\r\n                modalClass={modalClass}\r\n                modalText={textModal}\r\n                modalFunction={setClass}\r\n                Id={Id}\r\n                innerFunction={removeProject}\r\n              />\r\n            )}\r\n            {fun === \"showFunction\" && (\r\n              <ShowBox\r\n                modalClass={modalClass}\r\n                modalText={textModal}\r\n                modalFunction={setClass}\r\n              />\r\n            )}\r\n            <AlertBox\r\n              modalClass={alertClass}\r\n              modalText={alertText}\r\n              modalFunction={setAlertClass}\r\n            />\r\n          </TransitionGroup>\r\n        </div>\r\n        <div className=\"d-flex justify-content-between\">\r\n          {/* <ExportReactCSV\r\n            csvData={carExelInfo(clients)}\r\n            fileName={\"авто\"}\r\n            textCSV=\"авто.xlx\"\r\n          /> */}\r\n          {/* <ExportReactCSV\r\n            csvData={carLiquidsExelInfo(clients, lists, routes)}\r\n            fileName={\"пммАвто\"}\r\n            textCSV=\"пмм.xlx\"\r\n          /> */}\r\n          {/* <ExportReactCSV\r\n            csvData={carListLiquidsExelInfo(clients, lists, routes)}\r\n            fileName={\"пммЛист\"}\r\n            textCSV=\"листи.xlx\"\r\n          />    */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n","import React, { useContext, useEffect, memo } from \"react\";\r\nimport { PersonsComp } from \"../components/PersonsComp\";\r\nimport { FirebaseContext } from \"../context/fiebase/firebaseContext\";\r\nimport { Loader } from \"../components/Loader\";\r\nimport fire from \"../config/Fire\";\r\n\r\nconst UnlegalPersons = memo(({ windowWidth }) => {\r\n  const clientType = \"Фізичний\";\r\n    let email = \"\";\r\n    if(fire.auth.currentUser){\r\n        email = fire.auth.currentUser.email;\r\n        email = email.split(\"@\")[0];\r\n    } \r\n  const {\r\n    clients,\r\n    dates,\r\n    userInfos,\r\n\r\n    loading,\r\n    fetchClients,\r\n    fetchDates,\r\n    fetchUsersInfo,\r\n\r\n    openClient,\r\n    clouseClient,\r\n    removeClient,\r\n    projects,\r\n    addProject,\r\n    openProject,\r\n    clouseProject,\r\n    removeProject,\r\n    fetchProjects,\r\n    openCurrentProject,\r\n    clouseCurrentProject,\r\n    //routes,\r\n    \r\n    //fetchRoutes,\r\n    // openList,\r\n    // closeList,\r\n    // openRoute,\r\n    // closeRoute,\r\n    // openNewList,\r\n    // openNewRoute,\r\n    // closeNewRoute,\r\n    // clouseNewList, \r\n  } = useContext(FirebaseContext);\r\n  useEffect(() => {\r\n    fetchClients();\r\n    fetchDates();\r\n    fetchUsersInfo();\r\n    fetchProjects();\r\n    //fetchRoutes();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <small>{email}</small>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <PersonsComp\r\n          clients={clients}\r\n          dates={dates}\r\n          userInfos={userInfos}\r\n          openClient={openClient}\r\n          clouseClient={clouseClient}\r\n          removeClient={removeClient}\r\n          addProject={addProject}\r\n          openProject={openProject}\r\n          clouseProject={clouseProject}\r\n          removeProject={removeProject}\r\n          clientType={clientType}\r\n          windowWidth={windowWidth}\r\n          projects={projects}\r\n          openCurrentProject={openCurrentProject}\r\n          clouseCurrentProject={clouseCurrentProject}\r\n          //routes={routes}\r\n          //openList={openList}\r\n          //closeList={closeList}\r\n          //openRoute={openRoute}\r\n          //closeRoute={closeRoute}\r\n          //openNewList={openNewList}\r\n          //clouseNewList={clouseNewList}\r\n          //openNewRoute={openNewRoute}\r\n          //closeNewRoute={closeNewRoute}\r\n         \r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default UnlegalPersons;\r\n\r\n"],"sourceRoot":""}